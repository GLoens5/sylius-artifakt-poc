<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'Symfony.Component.Form.Form' => 0,
'IteratorAggregate' => 1,
'Symfony.Component.Form.FormInterface' => 2,
'Symfony.Component.Form.ClearableErrorsInterface' => 3,
'Traversable' => 4,
'Countable' => 5,
'ArrayAccess' => 6,
'Sylius.Component.Order.Model.Order' => 7,
'Sylius.Component.Order.Model.OrderInterface' => 8,
'Sylius.Component.Resource.Model.TimestampableInterface' => 9,
'Sylius.Component.Resource.Model.ResourceInterface' => 10,
'Sylius.Component.Order.Model.AdjustableInterface' => 11,
'Sylius.Component.Order.Model.OrderItem' => 12,
'Sylius.Component.Order.Model.OrderItemInterface' => 13,
'Sylius.Component.Order.Model.OrderAwareInterface' => 14,
'Sylius.Component.Currency.Model.Currency' => 15,
'Sylius.Component.Currency.Model.CurrencyInterface' => 16,
'Sylius.Component.Resource.Model.CodeAwareInterface' => 17,
'Sylius.Component.Currency.Model.ExchangeRate' => 18,
'Sylius.Component.Currency.Model.ExchangeRateInterface' => 19,
'Sylius.Component.Locale.Model.Locale' => 20,
'Sylius.Component.Locale.Model.LocaleInterface' => 21,
'Sylius.Component.Product.Model.Product' => 22,
'Sylius.Component.Product.Model.ProductInterface' => 23,
'Sylius.Component.Resource.Model.TranslatableInterface' => 24,
'Sylius.Component.Resource.Model.ToggleableInterface' => 25,
'Sylius.Component.Resource.Model.SlugAwareInterface' => 26,
'Sylius.Component.Attribute.Model.AttributeSubjectInterface' => 27,
'Sylius.Component.Product.Model.ProductAssociationType' => 28,
'Sylius.Component.Product.Model.ProductAssociationTypeInterface' => 29,
'Sylius.Component.Product.Model.ProductAssociationTypeTranslation' => 30,
'Sylius.Component.Resource.Model.AbstractTranslation' => 31,
'Sylius.Component.Resource.Model.TranslationInterface' => 32,
'Sylius.Component.Product.Model.ProductAssociationTypeTranslationInterface' => 33,
'Sylius.Component.Product.Model.ProductOption' => 34,
'Sylius.Component.Product.Model.ProductOptionInterface' => 35,
'Sylius.Component.Product.Model.ProductOptionTranslation' => 36,
'Sylius.Component.Product.Model.ProductOptionTranslationInterface' => 37,
'Sylius.Component.Product.Model.ProductOptionValue' => 38,
'Sylius.Component.Product.Model.ProductOptionValueInterface' => 39,
'Sylius.Component.Product.Model.ProductOptionValueTranslation' => 40,
'Sylius.Component.Product.Model.ProductOptionValueTranslationInterface' => 41,
'Sylius.Component.Product.Model.ProductTranslation' => 42,
'Sylius.Component.Product.Model.ProductTranslationInterface' => 43,
'Sylius.Component.Product.Model.ProductVariant' => 44,
'Sylius.Component.Product.Model.ProductVariantInterface' => 45,
'Sylius.Component.Channel.Model.Channel' => 46,
'Sylius.Component.Channel.Model.ChannelInterface' => 47,
'Sylius.Component.Attribute.Model.Attribute' => 48,
'Sylius.Component.Attribute.Model.AttributeInterface' => 49,
'Sylius.Component.Attribute.Model.AttributeTranslation' => 50,
'Sylius.Component.Attribute.Model.AttributeTranslationInterface' => 51,
'Sylius.Component.Attribute.Model.AttributeValue' => 52,
'Sylius.Component.Attribute.Model.AttributeValueInterface' => 53,
'Sylius.Component.Taxation.Model.TaxCategory' => 54,
'Sylius.Component.Taxation.Model.TaxCategoryInterface' => 55,
'Sylius.Component.Taxation.Model.TaxRate' => 56,
'Sylius.Component.Taxation.Model.TaxRateInterface' => 57,
'Sylius.Component.Shipping.Model.Shipment' => 58,
'Sylius.Component.Shipping.Model.ShipmentInterface' => 59,
'Sylius.Component.Shipping.Model.ShippingSubjectInterface' => 60,
'Sylius.Component.Shipping.Model.ShippingCategory' => 61,
'Sylius.Component.Shipping.Model.ShippingCategoryInterface' => 62,
'Sylius.Component.Shipping.Model.ShippingMethod' => 63,
'Sylius.Component.Shipping.Model.ShippingMethodInterface' => 64,
'Sylius.Component.Resource.Model.ArchivableInterface' => 65,
'Sylius.Component.Shipping.Model.ShippingMethodTranslation' => 66,
'Sylius.Component.Shipping.Model.ShippingMethodTranslationInterface' => 67,
'Sylius.Component.Payment.Model.Payment' => 68,
'Sylius.Component.Payment.Model.PaymentInterface' => 69,
'Sylius.Component.Payment.Model.PaymentMethod' => 70,
'Sylius.Component.Payment.Model.PaymentMethodInterface' => 71,
'Sylius.Component.Payment.Model.PaymentMethodTranslation' => 72,
'Sylius.Component.Payment.Model.PaymentMethodTranslationInterface' => 73,
'Sylius.Component.Promotion.Model.Promotion' => 74,
'Sylius.Component.Promotion.Model.PromotionInterface' => 75,
'Sylius.Component.Promotion.Model.PromotionAction' => 76,
'Sylius.Component.Promotion.Model.PromotionActionInterface' => 77,
'Sylius.Component.Promotion.Model.ConfigurablePromotionElementInterface' => 78,
'Sylius.Component.Promotion.Model.PromotionCoupon' => 79,
'Sylius.Component.Promotion.Model.PromotionCouponInterface' => 80,
'Sylius.Component.Promotion.Generator.PromotionCouponGeneratorInstruction' => 81,
'Sylius.Component.Promotion.Generator.PromotionCouponGeneratorInstructionInterface' => 82,
'Sylius.Component.Promotion.Model.PromotionRule' => 83,
'Sylius.Component.Promotion.Model.PromotionRuleInterface' => 84,
'Sylius.Component.Addressing.Model.Address' => 85,
'Sylius.Component.Addressing.Model.AddressInterface' => 86,
'Sylius.Component.Addressing.Model.Country' => 87,
'Sylius.Component.Addressing.Model.CountryInterface' => 88,
'Sylius.Component.Addressing.Model.Province' => 89,
'Sylius.Component.Addressing.Model.ProvinceInterface' => 90,
'Sylius.Component.Addressing.Model.Zone' => 91,
'Sylius.Component.Addressing.Model.ZoneInterface' => 92,
'Sylius.Component.Addressing.Model.ZoneMember' => 93,
'Sylius.Component.Addressing.Model.ZoneMemberInterface' => 94,
'Sylius.Component.Taxonomy.Model.Taxon' => 95,
'Sylius.Component.Taxonomy.Model.TaxonInterface' => 96,
'Sylius.Component.Taxonomy.Model.TaxonTranslation' => 97,
'Sylius.Component.Taxonomy.Model.TaxonTranslationInterface' => 98,
'Sylius.Bundle.UserBundle.Form.Model.ChangePassword' => 99,
'Sylius.Bundle.UserBundle.Form.Model.PasswordReset' => 100,
'Sylius.Bundle.UserBundle.Form.Model.PasswordResetRequest' => 101,
'Sylius.Component.User.Model.User' => 102,
'Sylius.Component.User.Model.UserInterface' => 103,
'Symfony.Component.Security.Core.User.UserInterface' => 104,
'Symfony.Component.Security.Core.Encoder.EncoderAwareInterface' => 105,
'Serializable' => 106,
'Sylius.Component.User.Model.CredentialsHolderInterface' => 107,
'SyliusLabs.Polyfill.Symfony.Security.Core.User.AdvancedUserInterface' => 108,
'Sylius.Component.Customer.Model.Customer' => 109,
'Sylius.Component.Customer.Model.CustomerInterface' => 110,
'Sylius.Component.Customer.Model.CustomerGroup' => 111,
'Sylius.Component.Customer.Model.CustomerGroupInterface' => 112,
'Sylius.Component.Review.Model.Review' => 113,
'Sylius.Component.Review.Model.ReviewInterface' => 114,
'Sylius.Bundle.OrderBundle.Controller.AddToCartCommand' => 115,
'Sylius.Bundle.OrderBundle.Controller.AddToCartCommandInterface' => 116,
'Sylius.Component.Core.Model.AdminUser' => 117,
'Sylius.Component.Core.Model.AdminUserInterface' => 118,
'Sylius.Component.Core.Model.ImageAwareInterface' => 119,
'Sylius.Component.Core.Model.AvatarImage' => 120,
'Sylius.Component.Core.Model.Image' => 121,
'Sylius.Component.Core.Model.ImageInterface' => 122,
'Sylius.Component.Core.Model.AvatarImageInterface' => 123,
'Sylius.Component.Core.Model.Channel' => 124,
'Sylius.Component.Core.Model.ChannelInterface' => 125,
'Sylius.Component.Locale.Model.LocalesAwareInterface' => 126,
'Sylius.Component.Currency.Model.CurrenciesAwareInterface' => 127,
'Sylius.Component.Core.Model.ChannelPricing' => 128,
'Sylius.Component.Core.Model.ChannelPricingInterface' => 129,
'Sylius.Component.Core.Model.Customer' => 130,
'Sylius.Component.Core.Model.CustomerInterface' => 131,
'Sylius.Component.Review.Model.ReviewerInterface' => 132,
'Sylius.Component.Core.Model.ProductReviewerInterface' => 133,
'Sylius.Component.User.Model.UserAwareInterface' => 134,
'Sylius.Component.Core.Model.Order' => 135,
'Sylius.Component.Core.Model.OrderInterface' => 136,
'Sylius.Component.Promotion.Model.PromotionSubjectInterface' => 137,
'Sylius.Component.Channel.Model.ChannelAwareInterface' => 138,
'Sylius.Component.Customer.Model.CustomerAwareInterface' => 139,
'Sylius.Component.Promotion.Model.PromotionCouponAwarePromotionSubjectInterface' => 140,
'Sylius.Component.Promotion.Model.CountablePromotionSubjectInterface' => 141,
'Sylius.Component.Payment.Model.PaymentsSubjectInterface' => 142,
'Sylius.Component.Core.Model.PaymentMethod' => 143,
'Sylius.Component.Core.Model.PaymentMethodInterface' => 144,
'Sylius.Component.Channel.Model.ChannelsAwareInterface' => 145,
'Sylius.Component.Core.Model.Product' => 146,
'Sylius.Component.Core.Model.ProductInterface' => 147,
'Sylius.Component.Core.Model.ReviewableProductInterface' => 148,
'Sylius.Component.Core.Model.ImagesAwareInterface' => 149,
'Sylius.Component.Review.Model.ReviewableInterface' => 150,
'Sylius.Component.Core.Model.ProductTaxonsAwareInterface' => 151,
'Sylius.Component.Core.Model.ProductImage' => 152,
'Sylius.Component.Core.Model.ProductImageInterface' => 153,
'Sylius.Component.Core.Model.ProductVariant' => 154,
'Sylius.Component.Core.Model.ProductVariantInterface' => 155,
'Doctrine.Common.Comparable' => 156,
'Sylius.Component.Core.Model.ProductImagesAwareInterface' => 157,
'Sylius.Component.Resource.Model.VersionedInterface' => 158,
'Sylius.Component.Taxation.Model.TaxableInterface' => 159,
'Sylius.Component.Inventory.Model.StockableInterface' => 160,
'Sylius.Component.Shipping.Model.ShippableInterface' => 161,
'Sylius.Component.Core.Model.ShippingMethod' => 162,
'Sylius.Component.Core.Model.ShippingMethodInterface' => 163,
'Sylius.Component.Core.Model.TaxRate' => 164,
'Sylius.Component.Core.Model.TaxRateInterface' => 165,
'Sylius.Component.Core.Model.Taxon' => 166,
'Sylius.Component.Core.Model.TaxonInterface' => 167,
'Sylius.Component.Core.Model.TaxonImage' => 168,
'Sylius.Component.Core.Model.TaxonImageInterface' => 169,
'Payum.Core.Model.CreditCard' => 170,
'Payum.Core.Model.CreditCardInterface' => 171,
'Sylius.Bundle.ApiBundle.Command.Cart.AddItemToCart' => 172,
'Sylius.Bundle.ApiBundle.Command.OrderTokenValueAwareInterface' => 173,
'Sylius.Bundle.ApiBundle.Command.CommandAwareDataTransformerInterface' => 174,
'Sylius.Bundle.ApiBundle.Command.AddProductReview' => 175,
'Sylius.Bundle.ApiBundle.Command.Checkout.AddressOrder' => 176,
'Sylius.Bundle.ApiBundle.Command.Cart.ApplyCouponToCart' => 177,
'Sylius.Bundle.ApiBundle.Command.Cart.ChangeItemQuantityInCart' => 178,
'Sylius.Bundle.ApiBundle.Command.SubresourceIdAwareInterface' => 179,
'Sylius.Bundle.ApiBundle.Command.ChangeShopUserPassword' => 180,
'Sylius.Bundle.ApiBundle.Command.ShopUserIdAwareInterface' => 181,
'Sylius.Bundle.ApiBundle.Command.Checkout.ChoosePaymentMethod' => 182,
'Sylius.Bundle.ApiBundle.Command.PaymentMethodCodeAwareInterface' => 183,
'Sylius.Bundle.ApiBundle.Command.Checkout.ChooseShippingMethod' => 184,
'Sylius.Bundle.ApiBundle.Command.Checkout.CompleteOrder' => 185,
'Sylius.Component.Core.Model.OrderItem' => 186,
'Sylius.Component.Core.Model.OrderItemInterface' => 187,
'Sylius.Bundle.ApiBundle.Command.RegisterShopUser' => 188,
'Sylius.Bundle.ApiBundle.Command.ChannelCodeAwareInterface' => 189,
'Sylius.Bundle.ApiBundle.Command.LocaleCodeAwareInterface' => 190,
'Sylius.Bundle.ApiBundle.Command.RequestResetPasswordToken' => 191,
'Sylius.Bundle.ApiBundle.Command.ResendVerificationEmail' => 192,
'Sylius.Bundle.ApiBundle.Command.ResetPassword' => 193,
'Sylius.Bundle.ApiBundle.Command.Checkout.ShipShipment' => 194,
'Sylius.Bundle.ApiBundle.Command.ShipmentIdAwareInterface' => 195,
'Sylius.Bundle.ApiBundle.Command.VerifyCustomerAccount' => 196,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Form\\Extension\\Validator\\Constraints\\Form'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Form\\Extension\\Validator\\Constraints\\Form')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Form\\Form',
                ],
                'defaultGroup' => [
                    'Form',
                ],
                'traversalStrategy' => [
                    2,
                ],
                'constraints' => [
                    [
                        $o[1],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'Default' => [
                            $o[1],
                        ],
                        'Form' => [
                            $o[1],
                        ],
                    ],
                ],
                'groups' => [
                    1 => [
                        'Default',
                        'Form',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'IteratorAggregate',
                ],
                'defaultGroup' => [
                    'IteratorAggregate',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Form\\FormInterface',
                ],
                'defaultGroup' => [
                    'FormInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Form\\ClearableErrorsInterface',
                ],
                'defaultGroup' => [
                    'ClearableErrorsInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Traversable',
                ],
                'defaultGroup' => [
                    'Traversable',
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Countable',
                ],
                'defaultGroup' => [
                    'Countable',
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'ArrayAccess',
                ],
                'defaultGroup' => [
                    'ArrayAccess',
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Order\\Model\\Order',
                    'items',
                ],
                'defaultGroup' => [
                    'Order',
                ],
                'members' => [
                    [
                        'items' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'items' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Order\\Model\\Order',
                ],
                'property' => [
                    1 => 'items',
                ],
                'cascadingStrategy' => [
                    1 => 2,
                ],
                'traversalStrategy' => [
                    1 => 1,
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Order\\Model\\OrderInterface',
                ],
                'defaultGroup' => [
                    'OrderInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Resource\\Model\\TimestampableInterface',
                ],
                'defaultGroup' => [
                    'TimestampableInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Resource\\Model\\ResourceInterface',
                ],
                'defaultGroup' => [
                    'ResourceInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Order\\Model\\AdjustableInterface',
                ],
                'defaultGroup' => [
                    'AdjustableInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
            clone ($p['Sylius\\Bundle\\InventoryBundle\\Validator\\Constraints\\InStock'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\InventoryBundle\\Validator\\Constraints\\InStock')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Order\\Model\\OrderItem',
                    'quantity',
                ],
                'defaultGroup' => [
                    'OrderItem',
                ],
                'members' => [
                    [
                        'quantity' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'quantity' => $o[1],
                    ],
                ],
                'constraints' => [
                    [
                        $o[5],
                    ],
                    [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius_checkout_complete' => [
                            $o[5],
                        ],
                        'sylius' => [
                            $o[5],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                            $o[4],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Order\\Model\\OrderItem',
                ],
                'property' => [
                    1 => 'quantity',
                ],
                'message' => [
                    2 => 'sylius.order_item.quantity.not_blank',
                    'sylius.order_item.quantity.integer',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius_checkout_complete',
                        'sylius',
                    ],
                ],
                'type' => [
                    3 => 'integer',
                ],
                'minMessage' => [
                    4 => 'sylius.order_item.quantity.min',
                ],
                'min' => [
                    4 => 1,
                ],
                'stockablePath' => [
                    5 => 'variant',
                ],
            ],
        ],
        $o[0],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Order\\Model\\OrderItemInterface',
                ],
                'defaultGroup' => [
                    'OrderItemInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Order\\Model\\OrderAwareInterface',
                ],
                'defaultGroup' => [
                    'OrderAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
15 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Currency\\Model\\Currency',
                    'code',
                ],
                'defaultGroup' => [
                    'Currency',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                    ],
                ],
                'constraints' => [
                    [
                        $o[5],
                    ],
                    [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[5],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                            $o[4],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Currency\\Model\\Currency',
                ],
                'property' => [
                    1 => 'code',
                ],
                'message' => [
                    2 => 'sylius.currency.code.not_blank',
                    4 => 'sylius.currency.code.regex',
                    'sylius.currency.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'exactMessage' => [
                    3 => 'sylius.currency.code.exact_length',
                ],
                'max' => [
                    3 => 3,
                ],
                'min' => [
                    3 => 3,
                ],
                'pattern' => [
                    4 => '/^[\\w-]*$/',
                ],
                'fields' => [
                    5 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
16 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Currency\\Model\\CurrencyInterface',
                ],
                'defaultGroup' => [
                    'CurrencyInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
17 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Resource\\Model\\CodeAwareInterface',
                ],
                'defaultGroup' => [
                    'CodeAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
18 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThan'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThan')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Sylius\\Bundle\\CurrencyBundle\\Validator\\Constraints\\UniqueCurrencyPair'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CurrencyBundle\\Validator\\Constraints\\UniqueCurrencyPair')),
            clone ($p['Sylius\\Bundle\\CurrencyBundle\\Validator\\Constraints\\DifferentSourceTargetCurrency'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CurrencyBundle\\Validator\\Constraints\\DifferentSourceTargetCurrency')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Currency\\Model\\ExchangeRate',
                    'ratio',
                    4 => 'sourceCurrency',
                    6 => 'targetCurrency',
                ],
                'defaultGroup' => [
                    'ExchangeRate',
                ],
                'members' => [
                    [
                        'ratio' => [
                            $o[1],
                        ],
                        'sourceCurrency' => [
                            $o[4],
                        ],
                        'targetCurrency' => [
                            $o[6],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'ratio' => $o[1],
                        'sourceCurrency' => $o[4],
                        'targetCurrency' => $o[6],
                    ],
                ],
                'constraints' => [
                    [
                        $o[8],
                        $o[9],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                    ],
                    6 => [
                        $o[7],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[8],
                            $o[9],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                        ],
                    ],
                    6 => [
                        'sylius' => [
                            $o[7],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Currency\\Model\\ExchangeRate',
                    4 => 'Sylius\\Component\\Currency\\Model\\ExchangeRate',
                    6 => 'Sylius\\Component\\Currency\\Model\\ExchangeRate',
                ],
                'property' => [
                    1 => 'ratio',
                    4 => 'sourceCurrency',
                    6 => 'targetCurrency',
                ],
                'message' => [
                    2 => 'sylius.exchange_rate.ratio.not_blank',
                    'sylius.exchange_rate.ratio.greater_than',
                    5 => 'sylius.exchange_rate.source_currency.not_blank',
                    7 => 'sylius.exchange_rate.target_currency.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    7 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'value' => [
                    3 => 0,
                ],
            ],
        ],
        $o[0],
        []
    );
},
19 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Currency\\Model\\ExchangeRateInterface',
                ],
                'defaultGroup' => [
                    'ExchangeRateInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
20 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Locale\\Model\\Locale',
                    'code',
                ],
                'defaultGroup' => [
                    'Locale',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                    ],
                ],
                'constraints' => [
                    [
                        $o[4],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[4],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Locale\\Model\\Locale',
                ],
                'property' => [
                    1 => 'code',
                ],
                'message' => [
                    2 => 'sylius.locale.code.not_blank',
                    'sylius.locale.code.regex',
                    'sylius.locale.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[\\w-]*$/',
                ],
                'fields' => [
                    4 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
21 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Locale\\Model\\LocaleInterface',
                ],
                'defaultGroup' => [
                    'LocaleInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
22 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            ($f['Symfony\\Component\\Validator\\Mapping\\GetterMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\GetterMetadata'))(),
            clone ($p['Sylius\\Bundle\\ResourceBundle\\Validator\\Constraints\\UniqueWithinCollectionConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ResourceBundle\\Validator\\Constraints\\UniqueWithinCollectionConstraint')),
            clone ($p['Sylius\\Bundle\\ProductBundle\\Validator\\Constraint\\UniqueSimpleProductCode'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ProductBundle\\Validator\\Constraint\\UniqueSimpleProductCode')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\Product',
                    'code',
                    4 => 'attributes',
                    'translations',
                    'getVariants',
                ],
                'defaultGroup' => [
                    'Product',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'attributes' => [
                            $o[4],
                        ],
                        'translations' => [
                            $o[5],
                        ],
                        'variants' => [
                            $o[6],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'attributes' => $o[4],
                        'translations' => $o[5],
                    ],
                ],
                'getters' => [
                    [
                        'variants' => $o[6],
                    ],
                ],
                'constraints' => [
                    [
                        $o[8],
                        $o[9],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    6 => [
                        $o[7],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[8],
                            $o[9],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    6 => [
                        'sylius' => [
                            $o[7],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Product\\Model\\Product',
                    4 => 'Sylius\\Component\\Product\\Model\\Product',
                    'Sylius\\Component\\Product\\Model\\Product',
                    'Sylius\\Component\\Product\\Model\\Product',
                ],
                'property' => [
                    1 => 'code',
                    4 => 'attributes',
                    'translations',
                    'variants',
                ],
                'message' => [
                    2 => 'sylius.product.code.not_blank',
                    'sylius.product.code.regex',
                    7 => 'sylius.product_variant.code.within_product_unique',
                    9 => 'sylius.product.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    7 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[\\w-]*$/',
                ],
                'cascadingStrategy' => [
                    4 => 2,
                    2,
                ],
                'traversalStrategy' => [
                    4 => 1,
                    1,
                ],
                'fields' => [
                    9 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
23 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductInterface',
                ],
                'defaultGroup' => [
                    'ProductInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
24 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Resource\\Model\\TranslatableInterface',
                ],
                'defaultGroup' => [
                    'TranslatableInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
25 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Resource\\Model\\ToggleableInterface',
                ],
                'defaultGroup' => [
                    'ToggleableInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
26 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Resource\\Model\\SlugAwareInterface',
                ],
                'defaultGroup' => [
                    'SlugAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
27 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Attribute\\Model\\AttributeSubjectInterface',
                ],
                'defaultGroup' => [
                    'AttributeSubjectInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
28 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductAssociationType',
                    'code',
                    5 => 'translations',
                ],
                'defaultGroup' => [
                    'ProductAssociationType',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'translations' => [
                            $o[5],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'translations' => $o[5],
                    ],
                ],
                'constraints' => [
                    [
                        $o[6],
                    ],
                    [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[6],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                            $o[4],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Product\\Model\\ProductAssociationType',
                    5 => 'Sylius\\Component\\Product\\Model\\ProductAssociationType',
                ],
                'property' => [
                    1 => 'code',
                    5 => 'translations',
                ],
                'message' => [
                    2 => 'sylius.association_type.code.not_blank',
                    4 => 'sylius.association.code.regex',
                    6 => 'sylius.association_type.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    6 => [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.association_type.code.max_length',
                ],
                'minMessage' => [
                    3 => 'sylius.association_type.code.min_length',
                ],
                'max' => [
                    3 => 255,
                ],
                'min' => [
                    3 => 2,
                ],
                'pattern' => [
                    4 => '/^[\\w-]*$/',
                ],
                'cascadingStrategy' => [
                    5 => 2,
                ],
                'traversalStrategy' => [
                    5 => 1,
                ],
                'fields' => [
                    6 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
29 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductAssociationTypeInterface',
                ],
                'defaultGroup' => [
                    'ProductAssociationTypeInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
30 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslation',
                    'name',
                ],
                'defaultGroup' => [
                    'ProductAssociationTypeTranslation',
                ],
                'members' => [
                    [
                        'name' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'name' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslation',
                ],
                'property' => [
                    1 => 'name',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.association_type.name.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.association_type.name.max_length',
                ],
                'minMessage' => [
                    3 => 'sylius.association_type.name.min_length',
                ],
                'max' => [
                    3 => 255,
                ],
                'min' => [
                    3 => 2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
31 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Resource\\Model\\AbstractTranslation',
                ],
                'defaultGroup' => [
                    'AbstractTranslation',
                ],
            ],
        ],
        $o[0],
        []
    );
},
32 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Resource\\Model\\TranslationInterface',
                ],
                'defaultGroup' => [
                    'TranslationInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
33 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslationInterface',
                ],
                'defaultGroup' => [
                    'ProductAssociationTypeTranslationInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
34 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductOption',
                    'code',
                    4 => 'values',
                    'translations',
                ],
                'defaultGroup' => [
                    'ProductOption',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'values' => [
                            $o[4],
                        ],
                        'translations' => [
                            $o[5],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'values' => $o[4],
                        'translations' => $o[5],
                    ],
                ],
                'constraints' => [
                    [
                        $o[6],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[6],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Product\\Model\\ProductOption',
                    4 => 'Sylius\\Component\\Product\\Model\\ProductOption',
                    'Sylius\\Component\\Product\\Model\\ProductOption',
                ],
                'property' => [
                    1 => 'code',
                    4 => 'values',
                    'translations',
                ],
                'message' => [
                    2 => 'sylius.option.code.not_blank',
                    'sylius.option.code.regex',
                    6 => 'sylius.option.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    6 => [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[\\w-]*$/',
                ],
                'cascadingStrategy' => [
                    4 => 2,
                    2,
                ],
                'traversalStrategy' => [
                    4 => 1,
                    1,
                ],
                'fields' => [
                    6 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
35 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductOptionInterface',
                ],
                'defaultGroup' => [
                    'ProductOptionInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
36 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductOptionTranslation',
                    'name',
                ],
                'defaultGroup' => [
                    'ProductOptionTranslation',
                ],
                'members' => [
                    [
                        'name' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'name' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Product\\Model\\ProductOptionTranslation',
                ],
                'property' => [
                    1 => 'name',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.option.name.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.option.name.max_length',
                ],
                'minMessage' => [
                    3 => 'sylius.option.name.min_length',
                ],
                'max' => [
                    3 => 255,
                ],
                'min' => [
                    3 => 2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
37 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductOptionTranslationInterface',
                ],
                'defaultGroup' => [
                    'ProductOptionTranslationInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
38 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductOptionValue',
                    'code',
                    4 => 'translations',
                ],
                'defaultGroup' => [
                    'ProductOptionValue',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'translations' => [
                            $o[4],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'translations' => $o[4],
                    ],
                ],
                'constraints' => [
                    [
                        $o[5],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[5],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Product\\Model\\ProductOptionValue',
                    4 => 'Sylius\\Component\\Product\\Model\\ProductOptionValue',
                ],
                'property' => [
                    1 => 'code',
                    4 => 'translations',
                ],
                'message' => [
                    2 => 'sylius.option_value.code.not_blank',
                    'sylius.option_value.code.regex',
                    5 => 'sylius.option_value.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[\\w-]*$/',
                ],
                'cascadingStrategy' => [
                    4 => 2,
                ],
                'traversalStrategy' => [
                    4 => 1,
                ],
                'fields' => [
                    5 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
39 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductOptionValueInterface',
                ],
                'defaultGroup' => [
                    'ProductOptionValueInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
40 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslation',
                    'value',
                ],
                'defaultGroup' => [
                    'ProductOptionValueTranslation',
                ],
                'members' => [
                    [
                        'value' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'value' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslation',
                ],
                'property' => [
                    1 => 'value',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.option_value.value.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
41 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslationInterface',
                ],
                'defaultGroup' => [
                    'ProductOptionValueTranslationInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
42 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductTranslation',
                    'name',
                    4 => 'slug',
                ],
                'defaultGroup' => [
                    'ProductTranslation',
                ],
                'members' => [
                    [
                        'name' => [
                            $o[1],
                        ],
                        'slug' => [
                            $o[4],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'name' => $o[1],
                        'slug' => $o[4],
                    ],
                ],
                'constraints' => [
                    [
                        $o[7],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[7],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Product\\Model\\ProductTranslation',
                    4 => 'Sylius\\Component\\Product\\Model\\ProductTranslation',
                ],
                'property' => [
                    1 => 'name',
                    4 => 'slug',
                ],
                'message' => [
                    2 => 'sylius.product.name.not_blank',
                    5 => 'sylius.product.slug.not_blank',
                    7 => 'sylius.product.slug.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.product.name.max_length',
                    6 => 'sylius.product.slug.max_length',
                ],
                'minMessage' => [
                    3 => 'sylius.product.name.min_length',
                ],
                'max' => [
                    3 => 255,
                    6 => 255,
                ],
                'min' => [
                    3 => 2,
                ],
                'fields' => [
                    7 => [
                        'locale',
                        'slug',
                    ],
                ],
                'errorPath' => [
                    7 => 'slug',
                ],
            ],
        ],
        $o[0],
        []
    );
},
43 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductTranslationInterface',
                ],
                'defaultGroup' => [
                    'ProductTranslationInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
44 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
            clone ($p['Sylius\\Bundle\\ProductBundle\\Validator\\Constraint\\ProductVariantCombination'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ProductBundle\\Validator\\Constraint\\ProductVariantCombination')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductVariant',
                    'code',
                ],
                'defaultGroup' => [
                    'ProductVariant',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                    ],
                ],
                'constraints' => [
                    [
                        $o[4],
                        $o[5],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[4],
                            $o[5],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Product\\Model\\ProductVariant',
                ],
                'property' => [
                    1 => 'code',
                ],
                'message' => [
                    2 => 'sylius.product_variant.code.not_blank',
                    'sylius.product_variant.code.regex',
                    'sylius.product_variant.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[\\w-]*$/',
                ],
                'fields' => [
                    4 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
45 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductVariantInterface',
                ],
                'defaultGroup' => [
                    'ProductVariantInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
46 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Channel\\Model\\Channel',
                    'code',
                    4 => 'name',
                ],
                'defaultGroup' => [
                    'Channel',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'name' => [
                            $o[4],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'name' => $o[4],
                    ],
                ],
                'constraints' => [
                    [
                        $o[6],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[6],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Channel\\Model\\Channel',
                    4 => 'Sylius\\Component\\Channel\\Model\\Channel',
                ],
                'property' => [
                    1 => 'code',
                    4 => 'name',
                ],
                'message' => [
                    2 => 'sylius.channel.code.not_blank',
                    'sylius.channel.code.regex',
                    5 => 'sylius.channel.name.not_blank',
                    'sylius.channel.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[\\w-]*$/',
                ],
                'fields' => [
                    6 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
47 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Channel\\Model\\ChannelInterface',
                ],
                'defaultGroup' => [
                    'ChannelInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
48 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
            clone ($p['Sylius\\Bundle\\AttributeBundle\\Validator\\Constraints\\ValidTextAttributeConfiguration'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\AttributeBundle\\Validator\\Constraints\\ValidTextAttributeConfiguration')),
            clone ($p['Sylius\\Bundle\\AttributeBundle\\Validator\\Constraints\\ValidSelectAttributeConfiguration'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\AttributeBundle\\Validator\\Constraints\\ValidSelectAttributeConfiguration')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Attribute\\Model\\Attribute',
                    'code',
                    5 => 'translations',
                ],
                'defaultGroup' => [
                    'Attribute',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'translations' => [
                            $o[5],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'translations' => $o[5],
                    ],
                ],
                'constraints' => [
                    [
                        $o[6],
                        $o[7],
                        $o[8],
                    ],
                    [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[6],
                            $o[7],
                            $o[8],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                            $o[4],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Attribute\\Model\\Attribute',
                    5 => 'Sylius\\Component\\Attribute\\Model\\Attribute',
                ],
                'property' => [
                    1 => 'code',
                    5 => 'translations',
                ],
                'message' => [
                    2 => 'sylius.attribute.code.not_blank',
                    4 => 'sylius.attribute.code.regex',
                    6 => 'sylius.attribute.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    6 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.attribute.code.max_length',
                ],
                'minMessage' => [
                    3 => 'sylius.attribute.code.min_length',
                ],
                'max' => [
                    3 => 255,
                ],
                'min' => [
                    3 => 1,
                ],
                'pattern' => [
                    4 => '/^[\\w-]*$/',
                ],
                'cascadingStrategy' => [
                    5 => 2,
                ],
                'traversalStrategy' => [
                    5 => 1,
                ],
                'fields' => [
                    6 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
49 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Attribute\\Model\\AttributeInterface',
                ],
                'defaultGroup' => [
                    'AttributeInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
50 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Attribute\\Model\\AttributeTranslation',
                    'name',
                ],
                'defaultGroup' => [
                    'AttributeTranslation',
                ],
                'members' => [
                    [
                        'name' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'name' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Attribute\\Model\\AttributeTranslation',
                ],
                'property' => [
                    1 => 'name',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.attribute.name.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.attribute.name.max_length',
                ],
                'minMessage' => [
                    3 => 'sylius.attribute.name.min_length',
                ],
                'max' => [
                    3 => 255,
                ],
                'min' => [
                    3 => 1,
                ],
            ],
        ],
        $o[0],
        []
    );
},
51 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Attribute\\Model\\AttributeTranslationInterface',
                ],
                'defaultGroup' => [
                    'AttributeTranslationInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
52 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Sylius\\Bundle\\AttributeBundle\\Validator\\Constraints\\ValidAttributeValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\AttributeBundle\\Validator\\Constraints\\ValidAttributeValue')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Attribute\\Model\\AttributeValue',
                    'attribute',
                ],
                'defaultGroup' => [
                    'AttributeValue',
                ],
                'members' => [
                    [
                        'attribute' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'attribute' => $o[1],
                    ],
                ],
                'constraints' => [
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[3],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Attribute\\Model\\AttributeValue',
                ],
                'property' => [
                    1 => 'attribute',
                ],
                'message' => [
                    2 => 'sylius.attribute_value.attribute.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
53 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Attribute\\Model\\AttributeValueInterface',
                ],
                'defaultGroup' => [
                    'AttributeValueInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
54 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Taxation\\Model\\TaxCategory',
                    'code',
                    4 => 'name',
                ],
                'defaultGroup' => [
                    'TaxCategory',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'name' => [
                            $o[4],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'name' => $o[4],
                    ],
                ],
                'constraints' => [
                    [
                        $o[7],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[7],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Taxation\\Model\\TaxCategory',
                    4 => 'Sylius\\Component\\Taxation\\Model\\TaxCategory',
                ],
                'property' => [
                    1 => 'code',
                    4 => 'name',
                ],
                'message' => [
                    2 => 'sylius.tax_category.code.not_blank',
                    'sylius.tax_category.code.regex',
                    5 => 'sylius.tax_category.name.not_blank',
                    7 => 'sylius.tax_category.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[\\w-]*$/',
                ],
                'maxMessage' => [
                    6 => 'sylius.tax_category.name.max_length',
                ],
                'minMessage' => [
                    6 => 'sylius.tax_category.name.min_length',
                ],
                'max' => [
                    6 => 255,
                ],
                'min' => [
                    6 => 2,
                ],
                'fields' => [
                    7 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
55 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Taxation\\Model\\TaxCategoryInterface',
                ],
                'defaultGroup' => [
                    'TaxCategoryInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
56 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Taxation\\Model\\TaxRate',
                    'code',
                    4 => 'name',
                    7 => 'category',
                    9 => 'amount',
                    11 => 'calculator',
                ],
                'defaultGroup' => [
                    'TaxRate',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'name' => [
                            $o[4],
                        ],
                        'category' => [
                            $o[7],
                        ],
                        'amount' => [
                            $o[9],
                        ],
                        'calculator' => [
                            $o[11],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'name' => $o[4],
                        'category' => $o[7],
                        'amount' => $o[9],
                        'calculator' => $o[11],
                    ],
                ],
                'constraints' => [
                    [
                        $o[13],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                    ],
                    9 => [
                        $o[10],
                    ],
                    11 => [
                        $o[12],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[13],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                    7 => [
                        'sylius' => [
                            $o[8],
                        ],
                    ],
                    9 => [
                        'sylius' => [
                            $o[10],
                        ],
                    ],
                    11 => [
                        'sylius' => [
                            $o[12],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Taxation\\Model\\TaxRate',
                    4 => 'Sylius\\Component\\Taxation\\Model\\TaxRate',
                    7 => 'Sylius\\Component\\Taxation\\Model\\TaxRate',
                    9 => 'Sylius\\Component\\Taxation\\Model\\TaxRate',
                    11 => 'Sylius\\Component\\Taxation\\Model\\TaxRate',
                ],
                'property' => [
                    1 => 'code',
                    4 => 'name',
                    7 => 'category',
                    9 => 'amount',
                    11 => 'calculator',
                ],
                'message' => [
                    2 => 'sylius.tax_rate.code.not_blank',
                    'sylius.tax_rate.code.regex',
                    5 => 'sylius.tax_rate.name.not_blank',
                    8 => 'sylius.tax_rate.category.not_blank',
                    10 => 'sylius.tax_rate.amount.not_blank',
                    12 => 'sylius.tax_rate.calculator.not_blank',
                    'sylius.tax_rate.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    8 => [
                        'sylius',
                    ],
                    10 => [
                        'sylius',
                    ],
                    12 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[\\w-]*$/',
                ],
                'maxMessage' => [
                    6 => 'sylius.tax_rate.name.max_length',
                ],
                'minMessage' => [
                    6 => 'sylius.tax_rate.name.min_length',
                ],
                'max' => [
                    6 => 255,
                ],
                'min' => [
                    6 => 2,
                ],
                'fields' => [
                    13 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
57 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Taxation\\Model\\TaxRateInterface',
                ],
                'defaultGroup' => [
                    'TaxRateInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
58 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Shipping\\Model\\Shipment',
                    'state',
                    3 => 'method',
                ],
                'defaultGroup' => [
                    'Shipment',
                ],
                'members' => [
                    [
                        'state' => [
                            $o[1],
                        ],
                        'method' => [
                            $o[3],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'state' => $o[1],
                        'method' => $o[3],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Shipping\\Model\\Shipment',
                    3 => 'Sylius\\Component\\Shipping\\Model\\Shipment',
                ],
                'property' => [
                    1 => 'state',
                    3 => 'method',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                    ],
                    3 => [
                        $o[4],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                        ],
                    ],
                    3 => [
                        'sylius' => [
                            $o[4],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.shipment.state.not_blank',
                    4 => 'sylius.shipment.shipping_method.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    4 => [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
59 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Shipping\\Model\\ShipmentInterface',
                ],
                'defaultGroup' => [
                    'ShipmentInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
60 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Shipping\\Model\\ShippingSubjectInterface',
                ],
                'defaultGroup' => [
                    'ShippingSubjectInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
61 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Shipping\\Model\\ShippingCategory',
                    'code',
                    4 => 'name',
                ],
                'defaultGroup' => [
                    'ShippingCategory',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'name' => [
                            $o[4],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'name' => $o[4],
                    ],
                ],
                'constraints' => [
                    [
                        $o[7],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[7],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Shipping\\Model\\ShippingCategory',
                    4 => 'Sylius\\Component\\Shipping\\Model\\ShippingCategory',
                ],
                'property' => [
                    1 => 'code',
                    4 => 'name',
                ],
                'message' => [
                    2 => 'sylius.shipping_category.code.not_blank',
                    'sylius.shipping_category.code.regex',
                    5 => 'sylius.shipping_category.name.not_blank',
                    7 => 'sylius.shipping_category.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[\\w-]*$/',
                ],
                'maxMessage' => [
                    6 => 'sylius.shipping_category.name.max_length',
                ],
                'minMessage' => [
                    6 => 'sylius.shipping_category.name.min_length',
                ],
                'max' => [
                    6 => 255,
                ],
                'min' => [
                    6 => 2,
                ],
                'fields' => [
                    7 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
62 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Shipping\\Model\\ShippingCategoryInterface',
                ],
                'defaultGroup' => [
                    'ShippingCategoryInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
63 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Shipping\\Model\\ShippingMethod',
                    'code',
                    4 => 'calculator',
                    6 => 'translations',
                ],
                'defaultGroup' => [
                    'ShippingMethod',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'calculator' => [
                            $o[4],
                        ],
                        'translations' => [
                            $o[6],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'calculator' => $o[4],
                        'translations' => $o[6],
                    ],
                ],
                'constraints' => [
                    [
                        $o[7],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[7],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Shipping\\Model\\ShippingMethod',
                    4 => 'Sylius\\Component\\Shipping\\Model\\ShippingMethod',
                    6 => 'Sylius\\Component\\Shipping\\Model\\ShippingMethod',
                ],
                'property' => [
                    1 => 'code',
                    4 => 'calculator',
                    6 => 'translations',
                ],
                'message' => [
                    2 => 'sylius.shipping_method.code.not_blank',
                    'sylius.shipping_method.code.regex',
                    5 => 'sylius.shipping_method.calculator.not_blank',
                    7 => 'sylius.shipping_method.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    7 => [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[\\w-]*$/',
                ],
                'cascadingStrategy' => [
                    6 => 2,
                ],
                'traversalStrategy' => [
                    6 => 1,
                ],
                'fields' => [
                    7 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
64 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Shipping\\Model\\ShippingMethodInterface',
                ],
                'defaultGroup' => [
                    'ShippingMethodInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
65 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Resource\\Model\\ArchivableInterface',
                ],
                'defaultGroup' => [
                    'ArchivableInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
66 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslation',
                    'name',
                ],
                'defaultGroup' => [
                    'ShippingMethodTranslation',
                ],
                'members' => [
                    [
                        'name' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'name' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslation',
                ],
                'property' => [
                    1 => 'name',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.shipping_method.name.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.shipping_method.name.max_length',
                ],
                'minMessage' => [
                    3 => 'sylius.shipping_method.name.min_length',
                ],
                'max' => [
                    3 => 255,
                ],
                'min' => [
                    3 => 2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
67 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslationInterface',
                ],
                'defaultGroup' => [
                    'ShippingMethodTranslationInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
68 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\Currency'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Currency')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Payment\\Model\\Payment',
                    'currencyCode',
                    3 => 'method',
                ],
                'defaultGroup' => [
                    'Payment',
                ],
                'members' => [
                    [
                        'currencyCode' => [
                            $o[1],
                        ],
                        'method' => [
                            $o[3],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'currencyCode' => $o[1],
                        'method' => $o[3],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Payment\\Model\\Payment',
                    3 => 'Sylius\\Component\\Payment\\Model\\Payment',
                ],
                'property' => [
                    1 => 'currencyCode',
                    3 => 'method',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                    ],
                    3 => [
                        $o[4],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'Default' => [
                            $o[2],
                        ],
                        'Payment' => [
                            $o[2],
                        ],
                    ],
                    3 => [
                        'sylius' => [
                            $o[4],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.payment.currency_code.not_valid',
                    4 => 'sylius.payment.method.not_blank',
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'Payment',
                    ],
                    4 => [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
69 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Payment\\Model\\PaymentInterface',
                ],
                'defaultGroup' => [
                    'PaymentInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
70 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Payment\\Model\\PaymentMethod',
                    'code',
                    4 => 'translations',
                ],
                'defaultGroup' => [
                    'PaymentMethod',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'translations' => [
                            $o[4],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'translations' => $o[4],
                    ],
                ],
                'constraints' => [
                    [
                        $o[5],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[5],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Payment\\Model\\PaymentMethod',
                    4 => 'Sylius\\Component\\Payment\\Model\\PaymentMethod',
                ],
                'property' => [
                    1 => 'code',
                    4 => 'translations',
                ],
                'message' => [
                    2 => 'sylius.payment_method.code.not_blank',
                    'sylius.payment_method.code.regex',
                    5 => 'sylius.payment_method.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[\\w-]*$/',
                ],
                'cascadingStrategy' => [
                    4 => 2,
                ],
                'traversalStrategy' => [
                    4 => 1,
                ],
                'fields' => [
                    5 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
71 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Payment\\Model\\PaymentMethodInterface',
                ],
                'defaultGroup' => [
                    'PaymentMethodInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
72 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslation',
                    'name',
                ],
                'defaultGroup' => [
                    'PaymentMethodTranslation',
                ],
                'members' => [
                    [
                        'name' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'name' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslation',
                ],
                'property' => [
                    1 => 'name',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.payment_method.name.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'minMessage' => [
                    3 => 'sylius.payment_method.name.max_length',
                ],
                'max' => [
                    3 => 255,
                ],
                'min' => [
                    3 => 2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
73 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslationInterface',
                ],
                'defaultGroup' => [
                    'PaymentMethodTranslationInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
74 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
            clone ($p['Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionDateRange'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionDateRange')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\Promotion',
                    'code',
                    4 => 'name',
                    7 => 'description',
                    9 => 'actions',
                    'rules',
                ],
                'defaultGroup' => [
                    'Promotion',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'name' => [
                            $o[4],
                        ],
                        'description' => [
                            $o[7],
                        ],
                        'actions' => [
                            $o[9],
                        ],
                        'rules' => [
                            $o[10],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'name' => $o[4],
                        'description' => $o[7],
                        'actions' => $o[9],
                        'rules' => $o[10],
                    ],
                ],
                'constraints' => [
                    [
                        $o[11],
                        $o[12],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[11],
                            $o[12],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                    7 => [
                        'sylius' => [
                            $o[8],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Promotion\\Model\\Promotion',
                    4 => 'Sylius\\Component\\Promotion\\Model\\Promotion',
                    7 => 'Sylius\\Component\\Promotion\\Model\\Promotion',
                    9 => 'Sylius\\Component\\Promotion\\Model\\Promotion',
                    'Sylius\\Component\\Promotion\\Model\\Promotion',
                ],
                'property' => [
                    1 => 'code',
                    4 => 'name',
                    7 => 'description',
                    9 => 'actions',
                    'rules',
                ],
                'message' => [
                    2 => 'sylius.promotion.code.not_blank',
                    'sylius.promotion.code.regex',
                    5 => 'sylius.promotion.name.not_blank',
                    11 => 'sylius.promotion.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    8 => [
                        'sylius',
                    ],
                    11 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[\\w-]*$/',
                ],
                'maxMessage' => [
                    6 => 'sylius.promotion.name.max_length',
                    8 => 'sylius.promotion.description.max_length',
                ],
                'minMessage' => [
                    6 => 'sylius.promotion.name.min_length',
                    8 => 'sylius.promotion.description.min_length',
                ],
                'max' => [
                    6 => 255,
                    8 => 255,
                ],
                'min' => [
                    6 => 2,
                    8 => 2,
                ],
                'cascadingStrategy' => [
                    9 => 2,
                    2,
                ],
                'traversalStrategy' => [
                    9 => 1,
                    1,
                ],
                'fields' => [
                    11 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
75 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\PromotionInterface',
                ],
                'defaultGroup' => [
                    'PromotionInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
76 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\PromotionAction',
                    'configuration',
                ],
                'defaultGroup' => [
                    'PromotionAction',
                ],
                'members' => [
                    [
                        'configuration' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'configuration' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Promotion\\Model\\PromotionAction',
                ],
                'property' => [
                    1 => 'configuration',
                ],
                'cascadingStrategy' => [
                    1 => 2,
                ],
                'traversalStrategy' => [
                    1 => 1,
                ],
            ],
        ],
        $o[0],
        []
    );
},
77 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\PromotionActionInterface',
                ],
                'defaultGroup' => [
                    'PromotionActionInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
78 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\ConfigurablePromotionElementInterface',
                ],
                'defaultGroup' => [
                    'ConfigurablePromotionElementInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
79 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\PromotionCoupon',
                    'code',
                    5 => 'usageLimit',
                ],
                'defaultGroup' => [
                    'PromotionCoupon',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'usageLimit' => [
                            $o[5],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'usageLimit' => $o[5],
                    ],
                ],
                'constraints' => [
                    [
                        $o[7],
                    ],
                    [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                    5 => [
                        $o[6],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[7],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                            $o[4],
                        ],
                    ],
                    5 => [
                        'sylius' => [
                            $o[6],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Promotion\\Model\\PromotionCoupon',
                    5 => 'Sylius\\Component\\Promotion\\Model\\PromotionCoupon',
                ],
                'property' => [
                    1 => 'code',
                    5 => 'usageLimit',
                ],
                'message' => [
                    2 => 'sylius.promotion_coupon.code.not_blank',
                    4 => 'sylius.promotion_coupon.code.regex',
                    7 => 'sylius.promotion_coupon.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    6 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.promotion_coupon.code.max_length',
                ],
                'minMessage' => [
                    3 => 'sylius.promotion_coupon.code.min_length',
                    6 => 'sylius.promotion_coupon.usage_limit.min',
                ],
                'max' => [
                    3 => 255,
                ],
                'min' => [
                    3 => 2,
                    6 => 1,
                ],
                'pattern' => [
                    4 => '/^[\\w-]*$/',
                ],
                'fields' => [
                    7 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
80 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\PromotionCouponInterface',
                ],
                'defaultGroup' => [
                    'PromotionCouponInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
81 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\CouponPossibleGenerationAmount'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\CouponPossibleGenerationAmount')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Generator\\PromotionCouponGeneratorInstruction',
                    'amount',
                    4 => 'usageLimit',
                    6 => 'codeLength',
                ],
                'defaultGroup' => [
                    'PromotionCouponGeneratorInstruction',
                ],
                'members' => [
                    [
                        'amount' => [
                            $o[1],
                        ],
                        'usageLimit' => [
                            $o[4],
                        ],
                        'codeLength' => [
                            $o[6],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'amount' => $o[1],
                        'usageLimit' => $o[4],
                        'codeLength' => $o[6],
                    ],
                ],
                'constraints' => [
                    [
                        $o[9],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                    ],
                    6 => [
                        $o[7],
                        $o[8],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'Default' => [
                            $o[9],
                        ],
                        'PromotionCouponGeneratorInstruction' => [
                            $o[9],
                        ],
                    ],
                    [
                        'Default' => [
                            $o[2],
                            $o[3],
                        ],
                        'PromotionCouponGeneratorInstruction' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'Default' => [
                            $o[5],
                        ],
                        'PromotionCouponGeneratorInstruction' => [
                            $o[5],
                        ],
                    ],
                    6 => [
                        'Default' => [
                            $o[7],
                            $o[8],
                        ],
                        'PromotionCouponGeneratorInstruction' => [
                            $o[7],
                            $o[8],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Promotion\\Generator\\PromotionCouponGeneratorInstruction',
                    4 => 'Sylius\\Component\\Promotion\\Generator\\PromotionCouponGeneratorInstruction',
                    6 => 'Sylius\\Component\\Promotion\\Generator\\PromotionCouponGeneratorInstruction',
                ],
                'property' => [
                    1 => 'amount',
                    4 => 'usageLimit',
                    6 => 'codeLength',
                ],
                'message' => [
                    2 => 'sylius.promotion_coupon_generator_instruction.amount.not_blank',
                    8 => 'sylius.promotion_coupon_generator_instruction.code_length.not_blank',
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'PromotionCouponGeneratorInstruction',
                    ],
                    [
                        'Default',
                        'PromotionCouponGeneratorInstruction',
                    ],
                    5 => [
                        'Default',
                        'PromotionCouponGeneratorInstruction',
                    ],
                    7 => [
                        'Default',
                        'PromotionCouponGeneratorInstruction',
                    ],
                    [
                        'Default',
                        'PromotionCouponGeneratorInstruction',
                    ],
                    [
                        'Default',
                        'PromotionCouponGeneratorInstruction',
                    ],
                ],
                'minMessage' => [
                    3 => 'sylius.promotion_coupon_generator_instruction.amount.min',
                    5 => 'sylius.promotion_coupon_generator_instruction.usage_limit.min',
                    7 => 'sylius.promotion_coupon_generator_instruction.code_length.min',
                ],
                'min' => [
                    3 => 1,
                    5 => 1,
                    7 => 1,
                ],
                'maxMessage' => [
                    7 => 'sylius.promotion_coupon_generator_instruction.code_length.max',
                ],
                'max' => [
                    7 => 40,
                ],
                'deprecatedMinMessageSet' => [
                    7 => true,
                ],
                'deprecatedMaxMessageSet' => [
                    7 => true,
                ],
            ],
        ],
        $o[0],
        []
    );
},
82 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Generator\\PromotionCouponGeneratorInstructionInterface',
                ],
                'defaultGroup' => [
                    'PromotionCouponGeneratorInstructionInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
83 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\PromotionRule',
                    'configuration',
                ],
                'defaultGroup' => [
                    'PromotionRule',
                ],
                'members' => [
                    [
                        'configuration' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'configuration' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Promotion\\Model\\PromotionRule',
                ],
                'property' => [
                    1 => 'configuration',
                ],
                'cascadingStrategy' => [
                    1 => 2,
                ],
                'traversalStrategy' => [
                    1 => 1,
                ],
            ],
        ],
        $o[0],
        []
    );
},
84 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\PromotionRuleInterface',
                ],
                'defaultGroup' => [
                    'PromotionRuleInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
85 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            clone ($p['Sylius\\Bundle\\AddressingBundle\\Validator\\Constraints\\ProvinceAddressConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\AddressingBundle\\Validator\\Constraints\\ProvinceAddressConstraint')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Addressing\\Model\\Address',
                    'firstName',
                    4 => 'lastName',
                    7 => 'countryCode',
                    9 => 'street',
                    12 => 'city',
                    15 => 'postcode',
                ],
                'defaultGroup' => [
                    'Address',
                ],
                'members' => [
                    [
                        'firstName' => [
                            $o[1],
                        ],
                        'lastName' => [
                            $o[4],
                        ],
                        'countryCode' => [
                            $o[7],
                        ],
                        'street' => [
                            $o[9],
                        ],
                        'city' => [
                            $o[12],
                        ],
                        'postcode' => [
                            $o[15],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'firstName' => $o[1],
                        'lastName' => $o[4],
                        'countryCode' => $o[7],
                        'street' => $o[9],
                        'city' => $o[12],
                        'postcode' => $o[15],
                    ],
                ],
                'constraints' => [
                    [
                        $o[18],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                    ],
                    9 => [
                        $o[10],
                        $o[11],
                    ],
                    12 => [
                        $o[13],
                        $o[14],
                    ],
                    15 => [
                        $o[16],
                        $o[17],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius_shipping_address_update' => [
                            $o[18],
                        ],
                        'sylius' => [
                            $o[18],
                        ],
                    ],
                    [
                        'sylius_shipping_address_update' => [
                            $o[2],
                            $o[3],
                        ],
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius_shipping_address_update' => [
                            $o[5],
                            $o[6],
                        ],
                        'sylius' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                    7 => [
                        'sylius_shipping_address_update' => [
                            $o[8],
                        ],
                        'sylius' => [
                            $o[8],
                        ],
                    ],
                    9 => [
                        'sylius_shipping_address_update' => [
                            $o[10],
                            $o[11],
                        ],
                        'sylius' => [
                            $o[10],
                            $o[11],
                        ],
                    ],
                    12 => [
                        'sylius_shipping_address_update' => [
                            $o[13],
                            $o[14],
                        ],
                        'sylius' => [
                            $o[13],
                            $o[14],
                        ],
                    ],
                    15 => [
                        'sylius_shipping_address_update' => [
                            $o[16],
                            $o[17],
                        ],
                        'sylius' => [
                            $o[16],
                            $o[17],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Addressing\\Model\\Address',
                    4 => 'Sylius\\Component\\Addressing\\Model\\Address',
                    7 => 'Sylius\\Component\\Addressing\\Model\\Address',
                    9 => 'Sylius\\Component\\Addressing\\Model\\Address',
                    12 => 'Sylius\\Component\\Addressing\\Model\\Address',
                    15 => 'Sylius\\Component\\Addressing\\Model\\Address',
                ],
                'property' => [
                    1 => 'firstName',
                    4 => 'lastName',
                    7 => 'countryCode',
                    9 => 'street',
                    12 => 'city',
                    15 => 'postcode',
                ],
                'message' => [
                    2 => 'sylius.address.first_name.not_blank',
                    5 => 'sylius.address.last_name.not_blank',
                    8 => 'sylius.address.country.not_blank',
                    10 => 'sylius.address.street.not_blank',
                    13 => 'sylius.address.city.not_blank',
                    16 => 'sylius.address.postcode.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius_shipping_address_update',
                        'sylius',
                    ],
                    [
                        'sylius_shipping_address_update',
                        'sylius',
                    ],
                    5 => [
                        'sylius_shipping_address_update',
                        'sylius',
                    ],
                    [
                        'sylius_shipping_address_update',
                        'sylius',
                    ],
                    8 => [
                        'sylius_shipping_address_update',
                        'sylius',
                    ],
                    10 => [
                        'sylius_shipping_address_update',
                        'sylius',
                    ],
                    [
                        'sylius_shipping_address_update',
                        'sylius',
                    ],
                    13 => [
                        'sylius_shipping_address_update',
                        'sylius',
                    ],
                    [
                        'sylius_shipping_address_update',
                        'sylius',
                    ],
                    16 => [
                        'sylius_shipping_address_update',
                        'sylius',
                    ],
                    [
                        'sylius_shipping_address_update',
                        'sylius',
                    ],
                    [
                        'sylius_shipping_address_update',
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.address.first_name.max_length',
                    6 => 'sylius.address.last_name.max_length',
                    11 => 'sylius.address.street.max_length',
                    14 => 'sylius.address.city.max_length',
                    17 => 'sylius.address.postcode.max_length',
                ],
                'minMessage' => [
                    3 => 'sylius.address.first_name.min_length',
                    6 => 'sylius.address.last_name.min_length',
                    11 => 'sylius.address.street.min_length',
                    14 => 'sylius.address.city.min_length',
                    17 => 'sylius.address.postcode.min_length',
                ],
                'max' => [
                    3 => 255,
                    6 => 255,
                    11 => 255,
                    14 => 255,
                    17 => 255,
                ],
                'min' => [
                    3 => 2,
                    6 => 2,
                    11 => 2,
                    14 => 2,
                    17 => 1,
                ],
            ],
        ],
        $o[0],
        []
    );
},
86 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Addressing\\Model\\AddressInterface',
                ],
                'defaultGroup' => [
                    'AddressInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
87 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Addressing\\Model\\Country',
                    'code',
                    5 => 'provinces',
                ],
                'defaultGroup' => [
                    'Country',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'provinces' => [
                            $o[5],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'provinces' => $o[5],
                    ],
                ],
                'constraints' => [
                    [
                        $o[6],
                    ],
                    [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[6],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                            $o[4],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Addressing\\Model\\Country',
                    5 => 'Sylius\\Component\\Addressing\\Model\\Country',
                ],
                'property' => [
                    1 => 'code',
                    5 => 'provinces',
                ],
                'message' => [
                    2 => 'sylius.country.code.not_blank',
                    4 => 'sylius.country.code.regex',
                    6 => 'sylius.country.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    6 => [
                        'sylius',
                    ],
                ],
                'exactMessage' => [
                    3 => 'sylius.country.code.exact_length',
                ],
                'max' => [
                    3 => 2,
                ],
                'min' => [
                    3 => 2,
                ],
                'pattern' => [
                    4 => '/^[\\w-]*$/',
                ],
                'cascadingStrategy' => [
                    5 => 2,
                ],
                'traversalStrategy' => [
                    5 => 1,
                ],
                'fields' => [
                    6 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
88 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Addressing\\Model\\CountryInterface',
                ],
                'defaultGroup' => [
                    'CountryInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
89 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
            clone $p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Addressing\\Model\\Province',
                    'code',
                    4 => 'name',
                ],
                'defaultGroup' => [
                    'Province',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'name' => [
                            $o[4],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'name' => $o[4],
                    ],
                ],
                'constraints' => [
                    [
                        $o[7],
                        $o[8],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[7],
                            $o[8],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Addressing\\Model\\Province',
                    4 => 'Sylius\\Component\\Addressing\\Model\\Province',
                ],
                'property' => [
                    1 => 'code',
                    4 => 'name',
                ],
                'message' => [
                    2 => 'sylius.province.code.not_blank',
                    'sylius.province.code.regex',
                    5 => 'sylius.province.name.not_blank',
                    7 => 'sylius.province.name.unique',
                    'sylius.province.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[A-Z]{2}-[A-Z0-9]{1,}$/',
                ],
                'maxMessage' => [
                    6 => 'sylius.province.name.max_length',
                ],
                'minMessage' => [
                    6 => 'sylius.province.name.min_length',
                ],
                'max' => [
                    6 => 255,
                ],
                'min' => [
                    6 => 2,
                ],
                'fields' => [
                    7 => [
                        'name',
                        'country',
                    ],
                    'code',
                ],
                'errorPath' => [
                    7 => 'name',
                ],
            ],
        ],
        $o[0],
        []
    );
},
90 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Addressing\\Model\\ProvinceInterface',
                ],
                'defaultGroup' => [
                    'ProvinceInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
91 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            ($f['Symfony\\Component\\Validator\\Mapping\\GetterMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\GetterMetadata'))(),
            clone ($p['Sylius\\Bundle\\ResourceBundle\\Validator\\Constraints\\UniqueWithinCollectionConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ResourceBundle\\Validator\\Constraints\\UniqueWithinCollectionConstraint')),
            clone ($p['Sylius\\Bundle\\AddressingBundle\\Validator\\Constraints\\ZoneCannotContainItself'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\AddressingBundle\\Validator\\Constraints\\ZoneCannotContainItself')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Count'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Count')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Addressing\\Model\\Zone',
                    'code',
                    4 => 'scope',
                    6 => 'name',
                    9 => 'getMembers',
                ],
                'defaultGroup' => [
                    'Zone',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'scope' => [
                            $o[4],
                        ],
                        'name' => [
                            $o[6],
                        ],
                        'members' => [
                            $o[9],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'scope' => $o[4],
                        'name' => $o[6],
                    ],
                ],
                'getters' => [
                    [
                        'members' => $o[9],
                    ],
                ],
                'constraints' => [
                    [
                        $o[13],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                    ],
                    6 => [
                        $o[7],
                        $o[8],
                    ],
                    9 => [
                        $o[10],
                        $o[11],
                        $o[12],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[13],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                        ],
                    ],
                    6 => [
                        'sylius' => [
                            $o[7],
                            $o[8],
                        ],
                    ],
                    9 => [
                        'sylius' => [
                            $o[10],
                            $o[11],
                            $o[12],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Addressing\\Model\\Zone',
                    4 => 'Sylius\\Component\\Addressing\\Model\\Zone',
                    6 => 'Sylius\\Component\\Addressing\\Model\\Zone',
                    9 => 'Sylius\\Component\\Addressing\\Model\\Zone',
                ],
                'property' => [
                    1 => 'code',
                    4 => 'scope',
                    6 => 'name',
                    9 => 'members',
                ],
                'message' => [
                    2 => 'sylius.zone.code.not_blank',
                    'sylius.zone.code.regex',
                    5 => 'sylius.zone.scope.not_blank',
                    7 => 'sylius.zone.name.not_blank',
                    10 => 'sylius.zone_member.unique',
                    13 => 'sylius.zone.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    7 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    10 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[\\w-]*$/',
                ],
                'maxMessage' => [
                    8 => 'sylius.zone.name.max_length',
                ],
                'minMessage' => [
                    8 => 'sylius.zone.name.min_length',
                    12 => 'sylius.zone.members.min_count',
                ],
                'max' => [
                    8 => 255,
                ],
                'min' => [
                    8 => 2,
                    12 => 1,
                ],
                'cascadingStrategy' => [
                    9 => 2,
                ],
                'traversalStrategy' => [
                    9 => 1,
                ],
                'fields' => [
                    13 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
92 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Addressing\\Model\\ZoneInterface',
                ],
                'defaultGroup' => [
                    'ZoneInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
93 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Addressing\\Model\\ZoneMember',
                    'code',
                ],
                'defaultGroup' => [
                    'ZoneMember',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Addressing\\Model\\ZoneMember',
                ],
                'property' => [
                    1 => 'code',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.zone_member.code.not_blank',
                    'sylius.zone_member.code.regex',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[\\w-]*$/',
                ],
            ],
        ],
        $o[0],
        []
    );
},
94 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Addressing\\Model\\ZoneMemberInterface',
                ],
                'defaultGroup' => [
                    'ZoneMemberInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
95 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Taxonomy\\Model\\Taxon',
                    'translations',
                    'code',
                ],
                'defaultGroup' => [
                    'Taxon',
                ],
                'members' => [
                    [
                        'translations' => [
                            $o[1],
                        ],
                        'code' => [
                            $o[2],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'translations' => $o[1],
                        'code' => $o[2],
                    ],
                ],
                'constraints' => [
                    [
                        $o[5],
                    ],
                    2 => [
                        $o[3],
                        $o[4],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[5],
                        ],
                    ],
                    2 => [
                        'sylius' => [
                            $o[3],
                            $o[4],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Taxonomy\\Model\\Taxon',
                    'Sylius\\Component\\Taxonomy\\Model\\Taxon',
                ],
                'property' => [
                    1 => 'translations',
                    'code',
                ],
                'cascadingStrategy' => [
                    1 => 2,
                ],
                'traversalStrategy' => [
                    1 => 1,
                ],
                'message' => [
                    3 => 'sylius.taxon.code.not_blank',
                    'sylius.taxon.code.regex',
                    'sylius.taxon.code.unique',
                ],
                'groups' => [
                    3 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    4 => '/^[\\w-]*$/',
                ],
                'fields' => [
                    5 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
96 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Taxonomy\\Model\\TaxonInterface',
                ],
                'defaultGroup' => [
                    'TaxonInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
97 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation',
                    'name',
                    4 => 'slug',
                ],
                'defaultGroup' => [
                    'TaxonTranslation',
                ],
                'members' => [
                    [
                        'name' => [
                            $o[1],
                        ],
                        'slug' => [
                            $o[4],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'name' => $o[1],
                        'slug' => $o[4],
                    ],
                ],
                'constraints' => [
                    [
                        $o[6],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[6],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation',
                    4 => 'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation',
                ],
                'property' => [
                    1 => 'name',
                    4 => 'slug',
                ],
                'message' => [
                    2 => 'sylius.taxon.name.not_blank',
                    5 => 'sylius.taxon.slug.not_blank',
                    'sylius.taxon.slug.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.taxon.name.max_length',
                ],
                'max' => [
                    3 => 255,
                ],
                'fields' => [
                    6 => [
                        'locale',
                        'slug',
                    ],
                ],
                'errorPath' => [
                    6 => 'slug',
                ],
            ],
        ],
        $o[0],
        []
    );
},
98 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslationInterface',
                ],
                'defaultGroup' => [
                    'TaxonTranslationInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
99 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPassword'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPassword')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\UserBundle\\Form\\Model\\ChangePassword',
                    'currentPassword',
                    4 => 'newPassword',
                ],
                'defaultGroup' => [
                    'ChangePassword',
                ],
                'members' => [
                    [
                        'currentPassword' => [
                            $o[1],
                        ],
                        'newPassword' => [
                            $o[4],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'currentPassword' => $o[1],
                        'newPassword' => $o[4],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Bundle\\UserBundle\\Form\\Model\\ChangePassword',
                    4 => 'Sylius\\Bundle\\UserBundle\\Form\\Model\\ChangePassword',
                ],
                'property' => [
                    1 => 'currentPassword',
                    4 => 'newPassword',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.user.plainPassword.wrong_current',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.user.password.max',
                    6 => 'sylius.user.password.max',
                ],
                'minMessage' => [
                    3 => 'sylius.user.password.min',
                    6 => 'sylius.user.password.min',
                ],
                'max' => [
                    3 => 254,
                    6 => 254,
                ],
                'min' => [
                    3 => 4,
                    6 => 4,
                ],
            ],
        ],
        $o[0],
        []
    );
},
100 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\UserBundle\\Form\\Model\\PasswordReset',
                    'password',
                ],
                'defaultGroup' => [
                    'PasswordReset',
                ],
                'members' => [
                    [
                        'password' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'password' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Bundle\\UserBundle\\Form\\Model\\PasswordReset',
                ],
                'property' => [
                    1 => 'password',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.user.password.max',
                ],
                'minMessage' => [
                    3 => 'sylius.user.password.min',
                ],
                'max' => [
                    3 => 254,
                ],
                'min' => [
                    3 => 4,
                ],
            ],
        ],
        $o[0],
        []
    );
},
101 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\UserBundle\\Form\\Model\\PasswordResetRequest',
                    'email',
                ],
                'defaultGroup' => [
                    'PasswordResetRequest',
                ],
                'members' => [
                    [
                        'email' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'email' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Bundle\\UserBundle\\Form\\Model\\PasswordResetRequest',
                ],
                'property' => [
                    1 => 'email',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                            $o[3],
                            $o[4],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.user.email.not_blank',
                    4 => 'sylius.user.email.invalid',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.user.email.max',
                ],
                'minMessage' => [
                    3 => 'sylius.user.email.min',
                ],
                'max' => [
                    3 => 254,
                ],
                'min' => [
                    3 => 2,
                ],
                'mode' => [
                    4 => 'strict',
                ],
            ],
        ],
        $o[0],
        []
    );
},
102 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\User\\Model\\User',
                    'plainPassword',
                ],
                'defaultGroup' => [
                    'User',
                ],
                'members' => [
                    [
                        'plainPassword' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'plainPassword' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\User\\Model\\User',
                ],
                'property' => [
                    1 => 'plainPassword',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius_user_registration' => [
                            $o[2],
                            $o[3],
                        ],
                        'sylius_user_create' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.user.plainPassword.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius_user_registration',
                        'sylius_user_create',
                    ],
                    [
                        'sylius_user_registration',
                        'sylius_user_create',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.user.password.max',
                ],
                'minMessage' => [
                    3 => 'sylius.user.password.min',
                ],
                'max' => [
                    3 => 254,
                ],
                'min' => [
                    3 => 4,
                ],
            ],
        ],
        $o[0],
        []
    );
},
103 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\User\\Model\\UserInterface',
                ],
                'defaultGroup' => [
                    'UserInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
104 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Security\\Core\\User\\UserInterface',
                ],
                'defaultGroup' => [
                    'UserInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
105 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Security\\Core\\Encoder\\EncoderAwareInterface',
                ],
                'defaultGroup' => [
                    'EncoderAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
106 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Serializable',
                ],
                'defaultGroup' => [
                    'Serializable',
                ],
            ],
        ],
        $o[0],
        []
    );
},
107 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\User\\Model\\CredentialsHolderInterface',
                ],
                'defaultGroup' => [
                    'CredentialsHolderInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
108 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'SyliusLabs\\Polyfill\\Symfony\\Security\\Core\\User\\AdvancedUserInterface',
                ],
                'defaultGroup' => [
                    'AdvancedUserInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
109 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Customer\\Model\\Customer',
                    'firstName',
                    4 => 'lastName',
                    7 => 'gender',
                    9 => 'email',
                ],
                'defaultGroup' => [
                    'Customer',
                ],
                'members' => [
                    [
                        'firstName' => [
                            $o[1],
                        ],
                        'lastName' => [
                            $o[4],
                        ],
                        'gender' => [
                            $o[7],
                        ],
                        'email' => [
                            $o[9],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'firstName' => $o[1],
                        'lastName' => $o[4],
                        'gender' => $o[7],
                        'email' => $o[9],
                    ],
                ],
                'constraints' => [
                    [
                        $o[13],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                    ],
                    9 => [
                        $o[10],
                        $o[11],
                        $o[12],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[13],
                        ],
                    ],
                    [
                        'sylius_customer_profile' => [
                            $o[2],
                        ],
                        'sylius' => [
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius_customer_profile' => [
                            $o[5],
                        ],
                        'sylius' => [
                            $o[6],
                        ],
                    ],
                    7 => [
                        'sylius' => [
                            $o[8],
                        ],
                    ],
                    9 => [
                        'sylius' => [
                            $o[10],
                            $o[11],
                            $o[12],
                        ],
                        'sylius_customer_guest' => [
                            $o[10],
                            $o[11],
                            $o[12],
                        ],
                        'sylius_customer_checkout_guest' => [
                            $o[10],
                            $o[11],
                            $o[12],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Customer\\Model\\Customer',
                    4 => 'Sylius\\Component\\Customer\\Model\\Customer',
                    7 => 'Sylius\\Component\\Customer\\Model\\Customer',
                    9 => 'Sylius\\Component\\Customer\\Model\\Customer',
                ],
                'property' => [
                    1 => 'firstName',
                    4 => 'lastName',
                    7 => 'gender',
                    9 => 'email',
                ],
                'message' => [
                    2 => 'sylius.customer.first_name.not_blank',
                    5 => 'sylius.customer.last_name.not_blank',
                    8 => 'sylius.customer.gender.not_blank',
                    10 => 'sylius.customer.email.not_blank',
                    12 => 'sylius.customer.email.invalid',
                    'sylius.customer.email.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius_customer_profile',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius_customer_profile',
                    ],
                    [
                        'sylius',
                    ],
                    8 => [
                        'sylius',
                    ],
                    10 => [
                        'sylius',
                        'sylius_customer_guest',
                        'sylius_customer_checkout_guest',
                    ],
                    [
                        'sylius',
                        'sylius_customer_guest',
                        'sylius_customer_checkout_guest',
                    ],
                    [
                        'sylius',
                        'sylius_customer_guest',
                        'sylius_customer_checkout_guest',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.customer.first_name.max',
                    6 => 'sylius.customer.last_name.max',
                    11 => 'sylius.customer.email.max',
                ],
                'minMessage' => [
                    3 => 'sylius.customer.first_name.min',
                    6 => 'sylius.customer.last_name.min',
                ],
                'max' => [
                    3 => 255,
                    6 => 255,
                    11 => 254,
                ],
                'min' => [
                    3 => 2,
                    6 => 2,
                ],
                'mode' => [
                    12 => 'strict',
                ],
                'fields' => [
                    13 => 'emailCanonical',
                ],
                'errorPath' => [
                    13 => 'email',
                ],
            ],
        ],
        $o[0],
        []
    );
},
110 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Customer\\Model\\CustomerInterface',
                ],
                'defaultGroup' => [
                    'CustomerInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
111 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Customer\\Model\\CustomerGroup',
                    'code',
                    4 => 'name',
                ],
                'defaultGroup' => [
                    'CustomerGroup',
                ],
                'members' => [
                    [
                        'code' => [
                            $o[1],
                        ],
                        'name' => [
                            $o[4],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'code' => $o[1],
                        'name' => $o[4],
                    ],
                ],
                'constraints' => [
                    [
                        $o[7],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[7],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Customer\\Model\\CustomerGroup',
                    4 => 'Sylius\\Component\\Customer\\Model\\CustomerGroup',
                ],
                'property' => [
                    1 => 'code',
                    4 => 'name',
                ],
                'message' => [
                    2 => 'sylius.customer_group.code.not_blank',
                    'sylius.customer_group.code.regex',
                    5 => 'sylius.customer_group.name.not_blank',
                    7 => 'sylius.customer_group.code.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'pattern' => [
                    3 => '/^[\\w-]*$/',
                ],
                'maxMessage' => [
                    6 => 'sylius.customer_group.name.max',
                ],
                'minMessage' => [
                    6 => 'sylius.customer_group.name.min',
                ],
                'max' => [
                    6 => 255,
                ],
                'min' => [
                    6 => 2,
                ],
                'fields' => [
                    7 => 'code',
                ],
                'errorPath' => [
                    7 => 'code',
                ],
            ],
        ],
        $o[0],
        []
    );
},
112 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Customer\\Model\\CustomerGroupInterface',
                ],
                'defaultGroup' => [
                    'CustomerGroupInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
113 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\UniqueReviewerEmail'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\UniqueReviewerEmail')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Review\\Model\\Review',
                    'title',
                    4 => 'rating',
                    6 => 'comment',
                ],
                'defaultGroup' => [
                    'Review',
                ],
                'members' => [
                    [
                        'title' => [
                            $o[1],
                        ],
                        'rating' => [
                            $o[4],
                        ],
                        'comment' => [
                            $o[6],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'title' => $o[1],
                        'rating' => $o[4],
                        'comment' => $o[6],
                    ],
                ],
                'constraints' => [
                    [
                        $o[8],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                    ],
                    6 => [
                        $o[7],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius_review' => [
                            $o[8],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                        ],
                    ],
                    6 => [
                        'sylius' => [
                            $o[7],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Review\\Model\\Review',
                    4 => 'Sylius\\Component\\Review\\Model\\Review',
                    6 => 'Sylius\\Component\\Review\\Model\\Review',
                ],
                'property' => [
                    1 => 'title',
                    4 => 'rating',
                    6 => 'comment',
                ],
                'message' => [
                    2 => 'sylius.review.title.not_blank',
                    5 => 'sylius.review.rating.not_blank',
                    7 => 'sylius.review.comment.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    7 => [
                        'sylius',
                    ],
                    [
                        'sylius_review',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.review.title.max_length',
                ],
                'minMessage' => [
                    3 => 'sylius.review.title.min_length',
                ],
                'max' => [
                    3 => 255,
                ],
                'min' => [
                    3 => 2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
114 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Review\\Model\\ReviewInterface',
                ],
                'defaultGroup' => [
                    'ReviewInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
115 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CartItemAvailability'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CartItemAvailability')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\OrderBundle\\Controller\\AddToCartCommand',
                ],
                'defaultGroup' => [
                    'AddToCartCommand',
                ],
                'constraints' => [
                    [
                        $o[1],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[1],
                        ],
                    ],
                ],
                'message' => [
                    1 => 'sylius.cart_item.not_available',
                ],
                'groups' => [
                    1 => [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
116 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\OrderBundle\\Controller\\AddToCartCommandInterface',
                ],
                'defaultGroup' => [
                    'AddToCartCommandInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
117 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
            clone $p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\AdminUser',
                    'email',
                    4 => 'username',
                    6 => 'localeCode',
                ],
                'defaultGroup' => [
                    'AdminUser',
                ],
                'members' => [
                    [
                        'email' => [
                            $o[1],
                        ],
                        'username' => [
                            $o[4],
                        ],
                        'localeCode' => [
                            $o[6],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'email' => $o[1],
                        'username' => $o[4],
                        'localeCode' => $o[6],
                    ],
                ],
                'constraints' => [
                    [
                        $o[9],
                        $o[10],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                    ],
                    6 => [
                        $o[7],
                        $o[8],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[9],
                            $o[10],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                        ],
                    ],
                    6 => [
                        'sylius' => [
                            $o[7],
                            $o[8],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Core\\Model\\AdminUser',
                    4 => 'Sylius\\Component\\Core\\Model\\AdminUser',
                    6 => 'Sylius\\Component\\Core\\Model\\AdminUser',
                ],
                'property' => [
                    1 => 'email',
                    4 => 'username',
                    6 => 'localeCode',
                ],
                'message' => [
                    2 => 'sylius.user.email.not_blank',
                    'sylius.user.email.invalid',
                    5 => 'sylius.user.username.not_blank',
                    7 => 'sylius.user.locale_code.not_blank',
                    9 => 'sylius.user.email.unique',
                    'sylius.user.username.unique',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    7 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'mode' => [
                    3 => 'strict',
                ],
                'max' => [
                    8 => 12,
                ],
                'min' => [
                    8 => 2,
                ],
                'fields' => [
                    9 => 'email',
                    'username',
                ],
            ],
        ],
        $o[0],
        []
    );
},
118 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\AdminUserInterface',
                ],
                'defaultGroup' => [
                    'AdminUserInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
119 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ImageAwareInterface',
                ],
                'defaultGroup' => [
                    'ImageAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
120 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\Image'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Image')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\AvatarImage',
                    'file',
                ],
                'defaultGroup' => [
                    'AvatarImage',
                ],
                'members' => [
                    [
                        'file' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'file' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Core\\Model\\AvatarImage',
                ],
                'property' => [
                    1 => 'file',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                        ],
                    ],
                ],
                'binaryFormat' => [
                    2 => false,
                ],
                'maxSizeMessage' => [
                    2 => 'sylius.avatar_image.file.max_size',
                ],
                'uploadIniSizeErrorMessage' => [
                    2 => 'sylius.avatar_image.file.upload_ini_size',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                ],
            ],
            'Symfony\\Component\\Validator\\Constraints\\File' => [
                'maxSize' => [
                    2 => 5000000,
                ],
            ],
        ],
        $o[0],
        []
    );
},
121 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\Image',
                ],
                'defaultGroup' => [
                    'Image',
                ],
            ],
        ],
        $o[0],
        []
    );
},
122 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ImageInterface',
                ],
                'defaultGroup' => [
                    'ImageInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
123 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\AvatarImageInterface',
                ],
                'defaultGroup' => [
                    'AvatarImageInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
124 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
            clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelDefaultLocaleEnabled'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelDefaultLocaleEnabled')),
            clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\HasEnabledEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\HasEnabledEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\Channel',
                    'baseCurrency',
                    3 => 'defaultLocale',
                    5 => 'taxCalculationStrategy',
                    7 => 'contactEmail',
                ],
                'defaultGroup' => [
                    'Channel',
                ],
                'members' => [
                    [
                        'baseCurrency' => [
                            $o[1],
                        ],
                        'defaultLocale' => [
                            $o[3],
                        ],
                        'taxCalculationStrategy' => [
                            $o[5],
                        ],
                        'contactEmail' => [
                            $o[7],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'baseCurrency' => $o[1],
                        'defaultLocale' => $o[3],
                        'taxCalculationStrategy' => $o[5],
                        'contactEmail' => $o[7],
                    ],
                ],
                'constraints' => [
                    [
                        $o[10],
                        $o[11],
                    ],
                    [
                        $o[2],
                    ],
                    3 => [
                        $o[4],
                    ],
                    5 => [
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                        $o[9],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[10],
                            $o[11],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                        ],
                    ],
                    3 => [
                        'sylius' => [
                            $o[4],
                        ],
                    ],
                    5 => [
                        'sylius' => [
                            $o[6],
                        ],
                    ],
                    7 => [
                        'sylius' => [
                            $o[8],
                            $o[9],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Core\\Model\\Channel',
                    3 => 'Sylius\\Component\\Core\\Model\\Channel',
                    5 => 'Sylius\\Component\\Core\\Model\\Channel',
                    7 => 'Sylius\\Component\\Core\\Model\\Channel',
                ],
                'property' => [
                    1 => 'baseCurrency',
                    3 => 'defaultLocale',
                    5 => 'taxCalculationStrategy',
                    7 => 'contactEmail',
                ],
                'message' => [
                    2 => 'sylius.channel.base_currency.not_blank',
                    4 => 'sylius.channel.default_locale.not_blank',
                    9 => 'sylius.channel.contact_email.invalid',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    4 => [
                        'sylius',
                    ],
                    6 => [
                        'sylius',
                    ],
                    8 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    8 => 'sylius.channel.contact_email.max',
                ],
                'minMessage' => [
                    8 => 'sylius.channel.contact_email.min',
                ],
                'max' => [
                    8 => 254,
                ],
                'min' => [
                    8 => 2,
                ],
                'mode' => [
                    9 => 'strict',
                ],
            ],
        ],
        $o[0],
        []
    );
},
125 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ChannelInterface',
                ],
                'defaultGroup' => [
                    'ChannelInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
126 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Locale\\Model\\LocalesAwareInterface',
                ],
                'defaultGroup' => [
                    'LocalesAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
127 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Currency\\Model\\CurrenciesAwareInterface',
                ],
                'defaultGroup' => [
                    'CurrenciesAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
128 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ChannelPricing',
                    'price',
                    3 => 'originalPrice',
                ],
                'defaultGroup' => [
                    'ChannelPricing',
                ],
                'members' => [
                    [
                        'price' => [
                            $o[1],
                        ],
                        'originalPrice' => [
                            $o[3],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'price' => $o[1],
                        'originalPrice' => $o[3],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Core\\Model\\ChannelPricing',
                    3 => 'Sylius\\Component\\Core\\Model\\ChannelPricing',
                ],
                'property' => [
                    1 => 'price',
                    3 => 'originalPrice',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                    ],
                    3 => [
                        $o[4],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                        ],
                    ],
                    3 => [
                        'sylius' => [
                            $o[4],
                        ],
                    ],
                ],
                'minMessage' => [
                    2 => 'sylius.channel_pricing.price.min',
                    4 => 'sylius.channel_pricing.price.min',
                ],
                'min' => [
                    2 => 0.0,
                    4 => 0.0,
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    4 => [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
129 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ChannelPricingInterface',
                ],
                'defaultGroup' => [
                    'ChannelPricingInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
130 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\RegisteredUser'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\RegisteredUser')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\Customer',
                ],
                'defaultGroup' => [
                    'Customer',
                ],
                'constraints' => [
                    [
                        $o[1],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius_customer_guest' => [
                            $o[1],
                        ],
                    ],
                ],
                'message' => [
                    1 => 'sylius.customer.email.registered',
                ],
                'groups' => [
                    1 => [
                        'sylius_customer_guest',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
131 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\CustomerInterface',
                ],
                'defaultGroup' => [
                    'CustomerInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
132 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Review\\Model\\ReviewerInterface',
                ],
                'defaultGroup' => [
                    'ReviewerInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
133 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ProductReviewerInterface',
                ],
                'defaultGroup' => [
                    'ProductReviewerInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
134 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\User\\Model\\UserAwareInterface',
                ],
                'defaultGroup' => [
                    'UserAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
135 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\Currency'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Currency')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotNull'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotNull')),
            clone ($p['Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionSubjectCoupon'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionSubjectCoupon')),
            clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\OrderShippingMethodEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\OrderShippingMethodEligibility')),
            clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\OrderPaymentMethodEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\OrderPaymentMethodEligibility')),
            clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\OrderProductEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\OrderProductEligibility')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\Order',
                    'shippingAddress',
                    'billingAddress',
                    'shipments',
                    'payments',
                    'currencyCode',
                    7 => 'promotionCoupon',
                ],
                'defaultGroup' => [
                    'Order',
                ],
                'members' => [
                    [
                        'shippingAddress' => [
                            $o[1],
                        ],
                        'billingAddress' => [
                            $o[2],
                        ],
                        'shipments' => [
                            $o[3],
                        ],
                        'payments' => [
                            $o[4],
                        ],
                        'currencyCode' => [
                            $o[5],
                        ],
                        'promotionCoupon' => [
                            $o[7],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'shippingAddress' => $o[1],
                        'billingAddress' => $o[2],
                        'shipments' => $o[3],
                        'payments' => $o[4],
                        'currencyCode' => $o[5],
                        'promotionCoupon' => $o[7],
                    ],
                ],
                'constraints' => [
                    [
                        $o[9],
                        $o[10],
                        $o[11],
                        $o[12],
                    ],
                    5 => [
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius_promotion_coupon' => [
                            $o[9],
                        ],
                        'sylius_checkout_complete' => [
                            $o[10],
                            $o[11],
                            $o[12],
                        ],
                    ],
                    5 => [
                        'sylius' => [
                            $o[6],
                        ],
                    ],
                    7 => [
                        'sylius_promotion_coupon' => [
                            $o[8],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Core\\Model\\Order',
                    'Sylius\\Component\\Core\\Model\\Order',
                    'Sylius\\Component\\Core\\Model\\Order',
                    'Sylius\\Component\\Core\\Model\\Order',
                    'Sylius\\Component\\Core\\Model\\Order',
                    7 => 'Sylius\\Component\\Core\\Model\\Order',
                ],
                'property' => [
                    1 => 'shippingAddress',
                    'billingAddress',
                    'shipments',
                    'payments',
                    'currencyCode',
                    7 => 'promotionCoupon',
                ],
                'cascadingStrategy' => [
                    1 => 2,
                    2,
                    2,
                    2,
                ],
                'traversalStrategy' => [
                    1 => 1,
                    1,
                    1,
                    1,
                ],
                'message' => [
                    6 => 'sylius.order.currency_code.not_valid',
                    8 => 'sylius.promotion_coupon.is_invalid',
                ],
                'groups' => [
                    6 => [
                        'sylius',
                    ],
                    8 => [
                        'sylius_promotion_coupon',
                    ],
                    [
                        'sylius_promotion_coupon',
                    ],
                    [
                        'sylius_checkout_complete',
                    ],
                    [
                        'sylius_checkout_complete',
                    ],
                    [
                        'sylius_checkout_complete',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
136 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\OrderInterface',
                ],
                'defaultGroup' => [
                    'OrderInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
137 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\PromotionSubjectInterface',
                ],
                'defaultGroup' => [
                    'PromotionSubjectInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
138 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Channel\\Model\\ChannelAwareInterface',
                ],
                'defaultGroup' => [
                    'ChannelAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
139 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Customer\\Model\\CustomerAwareInterface',
                ],
                'defaultGroup' => [
                    'CustomerAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
140 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\PromotionCouponAwarePromotionSubjectInterface',
                ],
                'defaultGroup' => [
                    'PromotionCouponAwarePromotionSubjectInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
141 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\CountablePromotionSubjectInterface',
                ],
                'defaultGroup' => [
                    'CountablePromotionSubjectInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
142 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Payment\\Model\\PaymentsSubjectInterface',
                ],
                'defaultGroup' => [
                    'PaymentsSubjectInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
143 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\PaymentMethod',
                    'gatewayConfig',
                ],
                'defaultGroup' => [
                    'PaymentMethod',
                ],
                'members' => [
                    [
                        'gatewayConfig' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'gatewayConfig' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Core\\Model\\PaymentMethod',
                ],
                'property' => [
                    1 => 'gatewayConfig',
                ],
                'cascadingStrategy' => [
                    1 => 2,
                ],
                'traversalStrategy' => [
                    1 => 1,
                ],
            ],
        ],
        $o[0],
        []
    );
},
144 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\PaymentMethodInterface',
                ],
                'defaultGroup' => [
                    'PaymentMethodInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
145 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Channel\\Model\\ChannelsAwareInterface',
                ],
                'defaultGroup' => [
                    'ChannelsAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
146 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\HasAllVariantPricesDefined'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\HasAllVariantPricesDefined')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\Product',
                    'images',
                ],
                'defaultGroup' => [
                    'Product',
                ],
                'members' => [
                    [
                        'images' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'images' => $o[1],
                    ],
                ],
                'constraints' => [
                    [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[2],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Core\\Model\\Product',
                ],
                'property' => [
                    1 => 'images',
                ],
                'cascadingStrategy' => [
                    1 => 2,
                ],
                'traversalStrategy' => [
                    1 => 1,
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
147 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ProductInterface',
                ],
                'defaultGroup' => [
                    'ProductInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
148 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ReviewableProductInterface',
                ],
                'defaultGroup' => [
                    'ReviewableProductInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
149 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ImagesAwareInterface',
                ],
                'defaultGroup' => [
                    'ImagesAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
150 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Review\\Model\\ReviewableInterface',
                ],
                'defaultGroup' => [
                    'ReviewableInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
151 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ProductTaxonsAwareInterface',
                ],
                'defaultGroup' => [
                    'ProductTaxonsAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
152 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\Image'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Image')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ProductImage',
                    'file',
                ],
                'defaultGroup' => [
                    'ProductImage',
                ],
                'members' => [
                    [
                        'file' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'file' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Core\\Model\\ProductImage',
                ],
                'property' => [
                    1 => 'file',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                        ],
                    ],
                ],
                'binaryFormat' => [
                    2 => false,
                ],
                'maxSizeMessage' => [
                    2 => 'sylius.product_image.file.max_size',
                ],
                'uploadIniSizeErrorMessage' => [
                    2 => 'sylius.product_image.file.upload_ini_size',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                ],
            ],
            'Symfony\\Component\\Validator\\Constraints\\File' => [
                'maxSize' => [
                    2 => 10000000,
                ],
            ],
        ],
        $o[0],
        []
    );
},
153 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ProductImageInterface',
                ],
                'defaultGroup' => [
                    'ProductImageInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
154 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Expression'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Expression')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\HasAllPricesDefined'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\HasAllPricesDefined')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ProductVariant',
                    'onHand',
                    5 => 'weight',
                    7 => 'width',
                    9 => 'height',
                    11 => 'depth',
                    13 => 'channelPricings',
                ],
                'defaultGroup' => [
                    'ProductVariant',
                ],
                'members' => [
                    [
                        'onHand' => [
                            $o[1],
                        ],
                        'weight' => [
                            $o[5],
                        ],
                        'width' => [
                            $o[7],
                        ],
                        'height' => [
                            $o[9],
                        ],
                        'depth' => [
                            $o[11],
                        ],
                        'channelPricings' => [
                            $o[13],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'onHand' => $o[1],
                        'weight' => $o[5],
                        'width' => $o[7],
                        'height' => $o[9],
                        'depth' => $o[11],
                        'channelPricings' => $o[13],
                    ],
                ],
                'constraints' => [
                    [
                        $o[14],
                    ],
                    [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                    5 => [
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                    ],
                    9 => [
                        $o[10],
                    ],
                    11 => [
                        $o[12],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[14],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                            $o[4],
                        ],
                    ],
                    5 => [
                        'sylius' => [
                            $o[6],
                        ],
                    ],
                    7 => [
                        'sylius' => [
                            $o[8],
                        ],
                    ],
                    9 => [
                        'sylius' => [
                            $o[10],
                        ],
                    ],
                    11 => [
                        'sylius' => [
                            $o[12],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Core\\Model\\ProductVariant',
                    5 => 'Sylius\\Component\\Core\\Model\\ProductVariant',
                    7 => 'Sylius\\Component\\Core\\Model\\ProductVariant',
                    9 => 'Sylius\\Component\\Core\\Model\\ProductVariant',
                    11 => 'Sylius\\Component\\Core\\Model\\ProductVariant',
                    13 => 'Sylius\\Component\\Core\\Model\\ProductVariant',
                ],
                'property' => [
                    1 => 'onHand',
                    5 => 'weight',
                    7 => 'width',
                    9 => 'height',
                    11 => 'depth',
                    13 => 'channelPricings',
                ],
                'message' => [
                    2 => 'sylius.product_variant.onHand.not_blank',
                    4 => 'sylius.product_variant.onHand.reserved',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    6 => [
                        'sylius',
                    ],
                    8 => [
                        'sylius',
                    ],
                    10 => [
                        'sylius',
                    ],
                    12 => [
                        'sylius',
                    ],
                    14 => [
                        'sylius',
                    ],
                ],
                'minMessage' => [
                    3 => 'sylius.product_variant.onHand.min',
                    6 => 'sylius.product_variant.weight.min',
                    8 => 'sylius.product_variant.width.min',
                    10 => 'sylius.product_variant.height.min',
                    12 => 'sylius.product_variant.depth.min',
                ],
                'min' => [
                    3 => 0,
                    6 => 0,
                    8 => 0,
                    10 => 0,
                    12 => 0,
                ],
                'expression' => [
                    4 => 'this.getOnHand() >= this.getOnHold()',
                ],
                'cascadingStrategy' => [
                    13 => 2,
                ],
                'traversalStrategy' => [
                    13 => 1,
                ],
            ],
        ],
        $o[0],
        []
    );
},
155 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ProductVariantInterface',
                ],
                'defaultGroup' => [
                    'ProductVariantInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
156 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Doctrine\\Common\\Comparable',
                ],
                'defaultGroup' => [
                    'Comparable',
                ],
            ],
        ],
        $o[0],
        []
    );
},
157 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ProductImagesAwareInterface',
                ],
                'defaultGroup' => [
                    'ProductImagesAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
158 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Resource\\Model\\VersionedInterface',
                ],
                'defaultGroup' => [
                    'VersionedInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
159 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Taxation\\Model\\TaxableInterface',
                ],
                'defaultGroup' => [
                    'TaxableInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
160 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Inventory\\Model\\StockableInterface',
                ],
                'defaultGroup' => [
                    'StockableInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
161 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Shipping\\Model\\ShippableInterface',
                ],
                'defaultGroup' => [
                    'ShippableInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
162 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ShippingMethod',
                    'zone',
                ],
                'defaultGroup' => [
                    'ShippingMethod',
                ],
                'members' => [
                    [
                        'zone' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'zone' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Core\\Model\\ShippingMethod',
                ],
                'property' => [
                    1 => 'zone',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.shipping_method.zone.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
163 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ShippingMethodInterface',
                ],
                'defaultGroup' => [
                    'ShippingMethodInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
164 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\TaxRate',
                    'zone',
                ],
                'defaultGroup' => [
                    'TaxRate',
                ],
                'members' => [
                    [
                        'zone' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'zone' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Core\\Model\\TaxRate',
                ],
                'property' => [
                    1 => 'zone',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.tax_rate.zone.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
165 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\TaxRateInterface',
                ],
                'defaultGroup' => [
                    'TaxRateInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
166 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\Taxon',
                    'images',
                ],
                'defaultGroup' => [
                    'Taxon',
                ],
                'members' => [
                    [
                        'images' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'images' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Core\\Model\\Taxon',
                ],
                'property' => [
                    1 => 'images',
                ],
                'cascadingStrategy' => [
                    1 => 2,
                ],
                'traversalStrategy' => [
                    1 => 1,
                ],
            ],
        ],
        $o[0],
        []
    );
},
167 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\TaxonInterface',
                ],
                'defaultGroup' => [
                    'TaxonInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
168 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\Image'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Image')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\TaxonImage',
                    'file',
                ],
                'defaultGroup' => [
                    'TaxonImage',
                ],
                'members' => [
                    [
                        'file' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'file' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Core\\Model\\TaxonImage',
                ],
                'property' => [
                    1 => 'file',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                        ],
                    ],
                ],
                'binaryFormat' => [
                    2 => false,
                ],
                'maxSizeMessage' => [
                    2 => 'sylius.taxon_image.file.max_size',
                ],
                'uploadIniSizeErrorMessage' => [
                    2 => 'sylius.taxon_image.file.upload_ini_size',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                ],
            ],
            'Symfony\\Component\\Validator\\Constraints\\File' => [
                'maxSize' => [
                    2 => 10000000,
                ],
            ],
        ],
        $o[0],
        []
    );
},
169 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\TaxonImageInterface',
                ],
                'defaultGroup' => [
                    'TaxonImageInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
170 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Luhn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Luhn')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
            clone ($p['Payum\\Core\\Bridge\\Symfony\\Validator\\Constraints\\CreditCardDate'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Payum\\Core\\Bridge\\Symfony\\Validator\\Constraints\\CreditCardDate')),
            clone ($p['DateTime'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('DateTime')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Payum\\Core\\Model\\CreditCard',
                    'number',
                    4 => 'holder',
                    7 => 'securityCode',
                    10 => 'expireAt',
                ],
                'defaultGroup' => [
                    'CreditCard',
                ],
                'members' => [
                    [
                        'number' => [
                            $o[1],
                        ],
                        'holder' => [
                            $o[4],
                        ],
                        'securityCode' => [
                            $o[7],
                        ],
                        'expireAt' => [
                            $o[10],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'number' => $o[1],
                        'holder' => $o[4],
                        'securityCode' => $o[7],
                        'expireAt' => $o[10],
                    ],
                ],
                'class' => [
                    1 => 'Payum\\Core\\Model\\CreditCard',
                    4 => 'Payum\\Core\\Model\\CreditCard',
                    7 => 'Payum\\Core\\Model\\CreditCard',
                    10 => 'Payum\\Core\\Model\\CreditCard',
                ],
                'property' => [
                    1 => 'number',
                    4 => 'holder',
                    7 => 'securityCode',
                    10 => 'expireAt',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                        $o[9],
                    ],
                    10 => [
                        $o[11],
                        $o[12],
                        $o[13],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'Payum' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'Payum' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                    7 => [
                        'Payum' => [
                            $o[8],
                            $o[9],
                        ],
                    ],
                    10 => [
                        'Payum' => [
                            $o[11],
                            $o[12],
                            $o[13],
                        ],
                    ],
                ],
                'groups' => [
                    2 => [
                        'Payum',
                    ],
                    [
                        'Payum',
                    ],
                    5 => [
                        'Payum',
                    ],
                    [
                        'Payum',
                    ],
                    8 => [
                        'Payum',
                    ],
                    [
                        'Payum',
                    ],
                    11 => [
                        'Payum',
                    ],
                    [
                        'Payum',
                    ],
                    [
                        'Payum',
                    ],
                ],
                'min' => [
                    6 => 4,
                    9 => 3,
                    13 => $o[14],
                ],
                'max' => [
                    9 => 4,
                ],
                'type' => [
                    12 => 'DateTimeInterface',
                ],
                'date' => [
                    14 => '2022-02-28 00:00:00.000000',
                ],
                'timezone_type' => [
                    14 => 3,
                ],
                'timezone' => [
                    14 => 'Europe/Berlin',
                ],
            ],
        ],
        $o[0],
        [
            1 => 14,
        ]
    );
},
171 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Payum\\Core\\Model\\CreditCardInterface',
                ],
                'defaultGroup' => [
                    'CreditCardInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
172 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
            clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\AddingEligibleProductVariantToCart'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\AddingEligibleProductVariantToCart')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Cart\\AddItemToCart',
                    'quantity',
                ],
                'defaultGroup' => [
                    'AddItemToCart',
                ],
                'members' => [
                    [
                        'quantity' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'quantity' => $o[1],
                    ],
                ],
                'constraints' => [
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[3],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Bundle\\ApiBundle\\Command\\Cart\\AddItemToCart',
                ],
                'property' => [
                    1 => 'quantity',
                ],
                'minMessage' => [
                    2 => 'sylius.order_item.quantity.min',
                ],
                'min' => [
                    2 => 1,
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
173 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\OrderTokenValueAwareInterface',
                ],
                'defaultGroup' => [
                    'OrderTokenValueAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
174 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\CommandAwareDataTransformerInterface',
                ],
                'defaultGroup' => [
                    'CommandAwareDataTransformerInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
175 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\UniqueReviewerEmail'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\UniqueReviewerEmail')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\AddProductReview',
                    'rating',
                    4 => 'title',
                    7 => 'comment',
                    9 => 'email',
                ],
                'defaultGroup' => [
                    'AddProductReview',
                ],
                'members' => [
                    [
                        'rating' => [
                            $o[1],
                        ],
                        'title' => [
                            $o[4],
                        ],
                        'comment' => [
                            $o[7],
                        ],
                        'email' => [
                            $o[9],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'rating' => $o[1],
                        'title' => $o[4],
                        'comment' => $o[7],
                        'email' => $o[9],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Bundle\\ApiBundle\\Command\\AddProductReview',
                    4 => 'Sylius\\Bundle\\ApiBundle\\Command\\AddProductReview',
                    7 => 'Sylius\\Bundle\\ApiBundle\\Command\\AddProductReview',
                    9 => 'Sylius\\Bundle\\ApiBundle\\Command\\AddProductReview',
                ],
                'property' => [
                    1 => 'rating',
                    4 => 'title',
                    7 => 'comment',
                    9 => 'email',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                    ],
                    9 => [
                        $o[10],
                        $o[11],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                    7 => [
                        'sylius' => [
                            $o[8],
                        ],
                    ],
                    9 => [
                        'sylius' => [
                            $o[10],
                            $o[11],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.review.rating.not_blank',
                    5 => 'sylius.review.title.not_blank',
                    8 => 'sylius.review.comment.not_blank',
                    10 => 'sylius.review.author.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    8 => [
                        'sylius',
                    ],
                    10 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'minMessage' => [
                    3 => 'sylius.review.rating.range',
                    6 => 'sylius.review.title.min_length',
                ],
                'maxMessage' => [
                    3 => 'sylius.review.rating.range',
                    6 => 'sylius.review.title.max_length',
                ],
                'min' => [
                    3 => 1,
                    6 => 2,
                ],
                'max' => [
                    3 => 5,
                    6 => 255,
                ],
                'deprecatedMinMessageSet' => [
                    3 => true,
                ],
                'deprecatedMaxMessageSet' => [
                    3 => true,
                ],
            ],
        ],
        $o[0],
        []
    );
},
176 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotNull'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotNull')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderNotEmpty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderNotEmpty')),
            clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\CorrectOrderAddress'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\CorrectOrderAddress')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\AddressOrder',
                    'billingAddress',
                    3 => 'shippingAddress',
                ],
                'defaultGroup' => [
                    'AddressOrder',
                ],
                'members' => [
                    [
                        'billingAddress' => [
                            $o[1],
                        ],
                        'shippingAddress' => [
                            $o[3],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'billingAddress' => $o[1],
                        'shippingAddress' => $o[3],
                    ],
                ],
                'constraints' => [
                    [
                        $o[4],
                        $o[5],
                    ],
                    [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[4],
                            $o[5],
                        ],
                    ],
                    [
                        'Default' => [
                            $o[2],
                        ],
                        'AddressOrder' => [
                            $o[2],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\AddressOrder',
                    3 => 'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\AddressOrder',
                ],
                'property' => [
                    1 => 'billingAddress',
                    3 => 'shippingAddress',
                ],
                'cascadingStrategy' => [
                    1 => 2,
                    3 => 2,
                ],
                'traversalStrategy' => [
                    1 => 1,
                    3 => 1,
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'AddressOrder',
                    ],
                    4 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
177 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\PromotionCouponEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\PromotionCouponEligibility')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Cart\\ApplyCouponToCart',
                ],
                'defaultGroup' => [
                    'ApplyCouponToCart',
                ],
                'constraints' => [
                    [
                        $o[1],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[1],
                        ],
                    ],
                ],
                'groups' => [
                    1 => [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
178 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
            clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ChangedItemQuantityInCart'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ChangedItemQuantityInCart')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Cart\\ChangeItemQuantityInCart',
                    'quantity',
                ],
                'defaultGroup' => [
                    'ChangeItemQuantityInCart',
                ],
                'members' => [
                    [
                        'quantity' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'quantity' => $o[1],
                    ],
                ],
                'constraints' => [
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[3],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Bundle\\ApiBundle\\Command\\Cart\\ChangeItemQuantityInCart',
                ],
                'property' => [
                    1 => 'quantity',
                ],
                'minMessage' => [
                    2 => 'sylius.order_item.quantity.min',
                ],
                'min' => [
                    2 => 1,
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
179 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\SubresourceIdAwareInterface',
                ],
                'defaultGroup' => [
                    'SubresourceIdAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
180 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPassword'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPassword')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\CorrectChangeShopUserConfirmPassword'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\CorrectChangeShopUserConfirmPassword')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\ChangeShopUserPassword',
                    'currentPassword',
                    4 => 'newPassword',
                ],
                'defaultGroup' => [
                    'ChangeShopUserPassword',
                ],
                'members' => [
                    [
                        'currentPassword' => [
                            $o[1],
                        ],
                        'newPassword' => [
                            $o[4],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'currentPassword' => $o[1],
                        'newPassword' => $o[4],
                    ],
                ],
                'constraints' => [
                    [
                        $o[7],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[7],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Bundle\\ApiBundle\\Command\\ChangeShopUserPassword',
                    4 => 'Sylius\\Bundle\\ApiBundle\\Command\\ChangeShopUserPassword',
                ],
                'property' => [
                    1 => 'currentPassword',
                    4 => 'newPassword',
                ],
                'message' => [
                    2 => 'sylius.user.plainPassword.wrong_current',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.user.password.max',
                    6 => 'sylius.user.password.max',
                ],
                'minMessage' => [
                    3 => 'sylius.user.password.min',
                    6 => 'sylius.user.password.min',
                ],
                'max' => [
                    3 => 254,
                    6 => 254,
                ],
                'min' => [
                    3 => 4,
                    6 => 4,
                ],
            ],
        ],
        $o[0],
        []
    );
},
181 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\ShopUserIdAwareInterface',
                ],
                'defaultGroup' => [
                    'ShopUserIdAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
182 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ChosenPaymentMethodEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ChosenPaymentMethodEligibility')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\ChoosePaymentMethod',
                ],
                'defaultGroup' => [
                    'ChoosePaymentMethod',
                ],
                'constraints' => [
                    [
                        $o[1],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[1],
                        ],
                    ],
                ],
                'groups' => [
                    1 => [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
183 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\PaymentMethodCodeAwareInterface',
                ],
                'defaultGroup' => [
                    'PaymentMethodCodeAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
184 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ChosenShippingMethodEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ChosenShippingMethodEligibility')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\ChooseShippingMethod',
                ],
                'defaultGroup' => [
                    'ChooseShippingMethod',
                ],
                'constraints' => [
                    [
                        $o[1],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[1],
                        ],
                    ],
                ],
                'groups' => [
                    1 => [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
185 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderNotEmpty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderNotEmpty')),
            clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderProductEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderProductEligibility')),
            clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderItemAvailability'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderItemAvailability')),
            clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderPaymentMethodEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderPaymentMethodEligibility')),
            clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderShippingMethodEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderShippingMethodEligibility')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\CompleteOrder',
                ],
                'defaultGroup' => [
                    'CompleteOrder',
                ],
                'constraints' => [
                    [
                        $o[1],
                        $o[2],
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius_checkout_complete' => [
                            $o[1],
                            $o[2],
                            $o[3],
                            $o[4],
                            $o[5],
                        ],
                    ],
                ],
                'groups' => [
                    1 => [
                        'sylius_checkout_complete',
                    ],
                    [
                        'sylius_checkout_complete',
                    ],
                    [
                        'sylius_checkout_complete',
                    ],
                    [
                        'sylius_checkout_complete',
                    ],
                    [
                        'sylius_checkout_complete',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
186 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotNull'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotNull')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotNull'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\PositiveOrZero'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\PositiveOrZero')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\OrderItem',
                    'variant',
                    3 => 'quantity',
                ],
                'defaultGroup' => [
                    'OrderItem',
                ],
                'members' => [
                    [
                        'variant' => [
                            $o[1],
                        ],
                        'quantity' => [
                            $o[3],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'variant' => $o[1],
                        'quantity' => $o[3],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Component\\Core\\Model\\OrderItem',
                    3 => 'Sylius\\Component\\Core\\Model\\OrderItem',
                ],
                'property' => [
                    1 => 'variant',
                    3 => 'quantity',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                    ],
                    3 => [
                        $o[4],
                        $o[5],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'Default' => [
                            $o[2],
                        ],
                        'OrderItem' => [
                            $o[2],
                        ],
                    ],
                    3 => [
                        'Default' => [
                            $o[4],
                            $o[5],
                        ],
                        'OrderItem' => [
                            $o[4],
                            $o[5],
                        ],
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'OrderItem',
                    ],
                    4 => [
                        'Default',
                        'OrderItem',
                    ],
                    [
                        'Default',
                        'OrderItem',
                    ],
                ],
                'value' => [
                    5 => 0,
                ],
            ],
        ],
        $o[0],
        []
    );
},
187 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\OrderItemInterface',
                ],
                'defaultGroup' => [
                    'OrderItemInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
188 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
            clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\UniqueShopUserEmail'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\UniqueShopUserEmail')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\RegisterShopUser',
                    'firstName',
                    3 => 'lastName',
                    5 => 'password',
                    8 => 'email',
                ],
                'defaultGroup' => [
                    'RegisterShopUser',
                ],
                'members' => [
                    [
                        'firstName' => [
                            $o[1],
                        ],
                        'lastName' => [
                            $o[3],
                        ],
                        'password' => [
                            $o[5],
                        ],
                        'email' => [
                            $o[8],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'firstName' => $o[1],
                        'lastName' => $o[3],
                        'password' => $o[5],
                        'email' => $o[8],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Bundle\\ApiBundle\\Command\\RegisterShopUser',
                    3 => 'Sylius\\Bundle\\ApiBundle\\Command\\RegisterShopUser',
                    5 => 'Sylius\\Bundle\\ApiBundle\\Command\\RegisterShopUser',
                    8 => 'Sylius\\Bundle\\ApiBundle\\Command\\RegisterShopUser',
                ],
                'property' => [
                    1 => 'firstName',
                    3 => 'lastName',
                    5 => 'password',
                    8 => 'email',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                    ],
                    3 => [
                        $o[4],
                    ],
                    5 => [
                        $o[6],
                        $o[7],
                    ],
                    8 => [
                        $o[9],
                        $o[10],
                        $o[11],
                        $o[12],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                        ],
                    ],
                    3 => [
                        'sylius' => [
                            $o[4],
                        ],
                    ],
                    5 => [
                        'sylius' => [
                            $o[6],
                            $o[7],
                        ],
                    ],
                    8 => [
                        'sylius' => [
                            $o[9],
                            $o[10],
                            $o[11],
                            $o[12],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.customer.first_name.not_blank',
                    4 => 'sylius.customer.last_name.not_blank',
                    6 => 'sylius.user.plainPassword.not_blank',
                    9 => 'sylius.customer.email.not_blank',
                    11 => 'sylius.customer.email.invalid',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    4 => [
                        'sylius',
                    ],
                    6 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    9 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    7 => 'sylius.user.password.max',
                    10 => 'sylius.customer.email.max',
                ],
                'minMessage' => [
                    7 => 'sylius.user.password.min',
                ],
                'max' => [
                    7 => 254,
                    10 => 254,
                ],
                'min' => [
                    7 => 4,
                ],
                'mode' => [
                    11 => 'strict',
                ],
            ],
        ],
        $o[0],
        []
    );
},
189 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\ChannelCodeAwareInterface',
                ],
                'defaultGroup' => [
                    'ChannelCodeAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
190 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\LocaleCodeAwareInterface',
                ],
                'defaultGroup' => [
                    'LocaleCodeAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
191 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\RequestResetPasswordToken',
                    'email',
                ],
                'defaultGroup' => [
                    'RequestResetPasswordToken',
                ],
                'members' => [
                    [
                        'email' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'email' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Bundle\\ApiBundle\\Command\\RequestResetPasswordToken',
                ],
                'property' => [
                    1 => 'email',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'sylius' => [
                            $o[2],
                        ],
                    ],
                ],
                'message' => [
                    2 => 'sylius.customer.email.not_blank',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
192 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShopUserExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShopUserExists')),
            clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShopUserNotVerified'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShopUserNotVerified')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\ResendVerificationEmail',
                ],
                'defaultGroup' => [
                    'ResendVerificationEmail',
                ],
                'constraints' => [
                    [
                        $o[1],
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[1],
                            $o[2],
                        ],
                    ],
                ],
                'groups' => [
                    1 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
193 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ConfirmResetPassword'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ConfirmResetPassword')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\ResetPassword',
                    'newPassword',
                    4 => 'confirmNewPassword',
                ],
                'defaultGroup' => [
                    'ResetPassword',
                ],
                'members' => [
                    [
                        'newPassword' => [
                            $o[1],
                        ],
                        'confirmNewPassword' => [
                            $o[4],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'newPassword' => $o[1],
                        'confirmNewPassword' => $o[4],
                    ],
                ],
                'constraints' => [
                    [
                        $o[7],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[7],
                        ],
                    ],
                    [
                        'sylius' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'sylius' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Sylius\\Bundle\\ApiBundle\\Command\\ResetPassword',
                    4 => 'Sylius\\Bundle\\ApiBundle\\Command\\ResetPassword',
                ],
                'property' => [
                    1 => 'newPassword',
                    4 => 'confirmNewPassword',
                ],
                'groups' => [
                    2 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    5 => [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                    [
                        'sylius',
                    ],
                ],
                'maxMessage' => [
                    3 => 'sylius.user.password.max',
                    6 => 'sylius.user.password.max',
                ],
                'minMessage' => [
                    3 => 'sylius.user.password.min',
                    6 => 'sylius.user.password.min',
                ],
                'max' => [
                    3 => 254,
                    6 => 254,
                ],
                'min' => [
                    3 => 4,
                    6 => 4,
                ],
            ],
        ],
        $o[0],
        []
    );
},
194 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShipmentAlreadyShipped'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShipmentAlreadyShipped')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\ShipShipment',
                ],
                'defaultGroup' => [
                    'ShipShipment',
                ],
                'constraints' => [
                    [
                        $o[1],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[1],
                        ],
                    ],
                ],
                'groups' => [
                    1 => [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
195 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\ShipmentIdAwareInterface',
                ],
                'defaultGroup' => [
                    'ShipmentIdAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
196 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\AccountVerificationTokenEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\AccountVerificationTokenEligibility')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\VerifyCustomerAccount',
                ],
                'defaultGroup' => [
                    'VerifyCustomerAccount',
                ],
                'constraints' => [
                    [
                        $o[1],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'sylius' => [
                            $o[1],
                        ],
                    ],
                ],
                'groups' => [
                    1 => [
                        'sylius',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
